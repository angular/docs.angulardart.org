{"name":"angular-animate","qualifiedName":"angular/angular-animate","comment":"<p>Css animation and dom lifecycle management for Angular.</p>\n<p>The animate library makes it easier to build animations that affect the\nlifecycle of dom elements. A useful example of this is animating the\nremoval of an element from the dom. In order to do this ideally the\noperation should immediatly execute and manipulate the data model,\nand the framework should handle the actual remove of the dom element once\nthe animation complets. This ensures that the logic and model of the\napplication is seperated so that the state of the model can be reasoned\nabout without having to wory about future modifications of the model.\nThis library uses computed css styles to calculate the total duration\nof an animation and handles the addition, removal, and modification of dom\nelements for block level directives such as <code>ng-if</code>, <code>ng-repeat</code>,\n<code>ng-hide</code>, and more.</p>\n<p>To use, install the NgAnimateModule into your main module:</p>\n<pre><code>var module = new Module()\n  ..install(new NgAnimateModule());\n</code></pre>\n<p>Once the module has been installed, all block level dom manipulations will\nbe routed through the <a>angular/angular-animate.CssAnimate</a> class instead of the\ndefault <a>angular/angular-animate.NgAnimate</a> implementation. This will, in turn,\nperform the tracking, manipulation, and computation for animations.</p>\n<p>As an example of how this works, lets walk through what happens whan an\nelement is added to the dom. The <a>angular/angular-animate.CssAnimate</a> implementation will add the\n<code>.ng-enter</code> class to new dom elements when they are inserted into the dom\nby a directive and will read the computed style. If there is a\ntransition or keyframe animation, that animation duration will be read,\nand the animation will be performed. The <code>.ng-enter-active</code> class will be\nadded to the dom element to set the target state for transition based\nanimations. When the animation is complete (determined by the\nprecomputed duration) the <code>.ng-enter</code> and <code>.ng-enter-active</code> classes\nwill be removed from the dom element.</p>\n<p>When removing elements from the dom, a simliar pattern is followed. The\n<code>.ng-leave</code> class will be added to an element, the transition and / or\nkeyframe animation duration will be computed, and if it is non-zero the\nanimation will be run by adding the <code>.ng-leave-active</code> class. When\nthe animation completes, the element will be physically removed from the\ndom.</p>\n<p>The same set of steps is run for each of the following types of dom\nmanipulation:</p><ul><li><code>.ng-enter</code></li><li><code>.ng-leave</code></li><li><code>.ng-move</code></li><li><code>.{cssclass}-add</code></li><li><code>.{cssclass}-remove</code></li></ul>\n<p>When writing the css for animating a component you should avoid putting\ncss transitions on elements that might be animated or there may be\nunintended pauses or side effects when an element is removed.</p>\n<p>Fade out example:</p>\n<p>HTML:</p>\n<pre><code>&lt;div class=\"goodbye\" ng-if=\"ctrl.visible\"&gt;\n  Goodbye world!\n&lt;/div&gt;\n</code></pre>\n<p>CSS:</p>\n<pre><code>.goodbye.ng-leave {\n  opacity: 1;\n  transition: opacity 1s;\n}\n.goodbye.ng-leave.ng-leave-active {\n  opacity: 0;\n}\n</code></pre>\n<p>This will perform a fade out animation on the 'goodby' div when the\n<code>ctrl.visible</code> property goes from <code>true</code> to <code>false</code>.</p>\n<p>The <a>angular/angular-animate.CssAnimate</a> will also do optimizations on running animations by\npreventing child dom animations with the <a>angular/angular-animate.AnimationOptimizer</a>. This\nprevents transitions on child elements while the parent is animating,\nbut will not stop running transitions once they have started.</p>\n<p>Finally, it's possible to change the behavior of the <a>angular/angular-animate.AnimationOptimizer</a>\nby using the <code>ng-animate</code> and <code>ng-animate-children</code> with the options\n<code>never</code>, <code>always</code>, or <code>auto</code>. <code>ng-animate</code> works only on the specific\nelement it is applied too and will override other optimizations if <code>never</code>\nor <code>always</code> is specified. <code>ng-animate</code> defaults to <code>auto</code> which will\ndefer to the <code>ng-animate-children</code> on a parent element or the currently\nrunning animation check.</p>\n<p><code>ng-animate-children</code> allows animation to be controlled on large chunks of\ndom. It only affects child elements, and allows the <code>always</code>, <code>never</code>,\nand <code>auto</code> values to be specified. Always will always attempt animations\non child dom directives, never will always prevent them (except in the\ncase where a given element has <code>ng-animate=\"always\"</code> specified),\nand <code>auto</code> will defer the decision to the currently running animation\ncheck.</p>","variables":{},"functions":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{}},"classes":{"class":[{"name":"NgAnimateDirectiveBase","qualifiedName":"angular/angular-animate.NgAnimateDirectiveBase","preview":"<p>Base class for directives that control animations with an\n<a>angular/angular-animate.AnimationOptimizer</a>.</p>"},{"name":"NgAnimateChildrenDirective","qualifiedName":"angular/angular-animate.NgAnimateChildrenDirective","preview":"<p>This provides DOM controls for turning animations on and off for child\ndom elements. Valid options are [always] [never] and auto. If this\ndirective is not applied the default value is auto for animation.</p>"},{"name":"NgAnimateDirective","qualifiedName":"angular/angular-animate.NgAnimateDirective","preview":"<p>This provides DOM controls for turning animations on and off for individual\ndom elements. Valid options are [always] [never] and auto. If this\ndirective is not applied the default value is auto for animation.</p>"},{"name":"CssAnimation","qualifiedName":"angular/angular-animate.CssAnimation","preview":"<p><a>angular/angular-animate.Animation</a> implementation for handling the standard angular 'event' and\n'event-active' class pattern with css. This will compute transition and\nanimation duration from the css classes and use it to complete futures when\nthe css animations complete.</p>"},{"name":"CssAnimationMap","qualifiedName":"angular/angular-animate.CssAnimationMap","preview":"<p>Tracked set of currently running css animations grouped by element.</p>"},{"name":"CssAnimate","qualifiedName":"angular/angular-animate.CssAnimate","preview":"<p>This defines the standard set of CSS animation classes, transitions, and\nnomenclature that will eventually be the foundation of the AngularDart\nanimation framework. This implementation uses the <a>angular/angular-animate.AnimationLoop</a> class to\nqueue and run CSS based transition and keyframe animations.</p>"},{"name":"AnimationOptimizer","qualifiedName":"angular/angular-animate.AnimationOptimizer","preview":"<p>The optimizer tracks elements and running animations. It's used to control\nand optionally skip certain animations that are deemed \"expensive\" such as\nrunning animations on child elements while the dom parent is also running an\nanimation.</p>"},{"name":"AnimationFrame","qualifiedName":"angular/angular-animate.AnimationFrame","preview":"<p>Wrapper around window.requestAnimationFrame so it can be intercepted and\ntested.</p>"},{"name":"AnimationLoop","qualifiedName":"angular/angular-animate.AnimationLoop","preview":"<p>Window.animationFrame update loop that tracks and drives\nLoopedAnimations's.</p>"},{"name":"AnimationList","qualifiedName":"angular/angular-animate.AnimationList","preview":"<p>This is a proxy class for dealing with a set of elements where the 'same'\nor similar animations are being run on them and it's more convenient to have\na merged animation to control and listen to a set of animations.</p>"},{"name":"LoopedAnimation","qualifiedName":"angular/angular-animate.LoopedAnimation","preview":"<p>A <a>angular/angular-animate.LoopedAnimation</a> is used with the <a>angular/angular-animate.AnimationLoop</a> to drive window\nanimation frame animations. This provides hooks for dom reads and updates so\nthat they can be batched together to prevent excessive dom recalculations\nwhen running multiple animations.</p>"},{"name":"NgAnimateModule","qualifiedName":"angular/angular-animate.NgAnimateModule","preview":"<p>Installing the NgAnimateModule will install a <a>angular/angular-animate.CssAnimate</a> implementation of\nthe <a>angular/angular-animate.NgAnimate</a> interface in your application. This will change the behavior\nof view construction, and some of the native directives to allow you to add\nand define css transition and keyframe animations for the styles of your\nelements.</p>"}],"typedef":{},"error":[]},"packageName":"angular","packageIntro":"<h1>AngularDart</h1>\n<p>A port of <a href=\"http://angularjs.org/\">Angular</a> to <a href=\"http://www.dartlang.org\">Dart</a>.</p>\n<h2>Installing</h2>\n<p>Follow the instructions on <a href=\"http://pub.dartlang.org/packages/angular#installing\">AngularDart's page on pub</a>.</p>\n<h2>API Documentation</h2>\n<p><a href=\"https://docs.angulardart.org\">API documentation</a>.</p>\n<h2>Learning more</h2>\n<p>Study the <a href=\"https://angulardart.org/tutorial\">AngularDart Tutorial</a> to learn more about Angular\nin Dart.</p>\n<h2>Joining the discussion</h2>\n<p>Discuss AngularDart on the <a href=\"https://groups.google.com/forum/#!forum/angular-dart\">mailing list</a>,\nask questions on <a href=\"http://stackoverflow.com/questions/tagged/angular.dart\">StackOverflow</a>,\nfollow <a href=\"https://plus.google.com/117340875933142003564/posts\">+AngularDart on Google+</a>,\nand follow <a href=\"https://twitter.com/AngularDart\">@AngularDart</a> and <a href=\"https://twitter.com/AngularJS\">@AngularJS</a> on Twitter.</p>\n<h2>Filing bugs</h2>\n<p>Please file bugs and feature requests using the <a href=\"https://github.com/angular/angular.dart/issues?state=open\">Github Issues Tracker</a>.</p>\n<h2>I want to help</h2>\n<p>Excellent read up on <a href=\"https://github.com/angular/angular.dart/blob/master/CONTRIBUTING.md\">contributing</a>.</p>"}
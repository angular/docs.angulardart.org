{"name":"NgValue","qualifiedName":"angular/angular-directive.NgValue","comment":"<p>Binds an expression to the value of a radio element or option,\nto be used when that element is selected.</p>\n<p>When the element is selected, the <code>ng-model</code> property of that element is set to the bound value.\nNote that <code>expr</code> can be any type; i.e., it is not restricted to <a>angular/dart-core.String</a>.</p>\n<p><strong>Usage</strong></p>\n<pre><code>&lt;input type=radio ng-model=model [ng-value=expr]&gt;\n\n&lt;option [ng-value=expr]&gt;...&lt;/option&gt;\n</code></pre>\n<p>Example:</p>\n<pre><code>&lt;select ng-model=\"robot\"&gt;\n  &lt;option ng-repeat=\"r in robots\" ng-value=\"r\"&gt;{{r.name}}&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n<p>When present, the value of this <code>ng-value</code> one-way attribute is assigned to\nthe <code>ng-model</code> property when the corresponding radio element or option is\nselected.</p>","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{"element":{"name":"element","qualifiedName":"angular/angular-directive.NgValue.element","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-dom-html.Element","inner":[]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{"value=":{"name":"value=","qualifiedName":"angular/angular-directive.NgValue.value=","comment":"","commentFrom":"angular-directive.NgValue.value=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"val":{"name":"val","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"angular/angular-core-annotation_src.NgOneWay","parameters":["'ng-value'"]}]}},"getters":{"value":{"name":"value","qualifiedName":"angular/angular-directive.NgValue.value","comment":"","commentFrom":"angular-directive.NgValue.value","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"angular/angular-directive.NgValue.NgValue-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"element":{"name":"element","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.Element","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"operators":{},"methods":{"module":{"name":"module","qualifiedName":"angular/angular-directive.NgValue.module","comment":"","commentFrom":"angular-directive.NgValue.module","inheritedFrom":"","static":true,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"binder":{"name":"binder","optional":false,"named":false,"default":false,"type":[{"outer":"angular-core-annotation_src.DirectiveBinder","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"angular/angular-directive.NgValue.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>angular/angular-directive.NgValue.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"angular/angular-directive.NgValue.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"angular/angular-directive.NgValue.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>angular/angular-directive.NgValue.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>angular/angular-directive.NgValue.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"angular/angular-directive.NgValue.noSuchMethod","comment":"<p><a>angular/angular-directive.NgValue.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>angular/angular-directive.NgValue.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>angular/angular-directive.NgValue.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>angular/angular-directive.NgValue.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"angular/angular-directive.NgValue.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[{"name":"angular/angular-core-annotation_src.Decorator","parameters":["selector:'input[type=radio][ng-model][ng-value]'","visibility:Visibility.LOCAL"]},{"name":"angular/angular-core-annotation_src.Decorator","parameters":["selector:'option[ng-value]'","visibility:Visibility.LOCAL"]}],"generics":{}}
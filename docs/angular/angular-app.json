{"name":"angular-app","qualifiedName":"angular/angular-app","comment":"<p>Bootstrapping for Angular applications via <a href=\"#angular-app-factory\">app:factory</a> for development,\nor <a href=\"#angular-app-factory-static\">app:factory:static</a> for production.</p>\n<p>In your <code>main()</code> function, you bootstrap Angular by explicitly defining and adding a module for\nyour application:</p>\n<pre><code>import 'package:angular/angular.dart';\nimport 'package:angular/application_factory.dart';\n\nmain() {\n  applicationFactory()\n      .rootContextType(HelloWorldController)\n      .run();\n}\n</code></pre>\n<p>In the code above, we use <a href=\"#angular-app-factory\">applicationFactory</a> to\ntake advantage of <a href=\"https://api.dartlang.org/apidocs/channels/stable/dartdoc-viewer/dart-mirrors\">dart:mirrors</a> during\ndevelopment. When you run the app in Dartium the <a href=\"#angular-app-factory\">app:factory</a>\nimplementation allows for quick edit-test development cycle.</p>\n<p>Note that you must explicitly import both <code>angular.dart</code> and <code>application_factory.dart</code> at\nthe start of your file.</p>\n<p>For production, transformers defined in your <code>pubspec.yaml</code> file convert the code to\nuse the <a href=\"#angular-app-factory-static\">app:factory:static</a> when you run <code>pub build</code>. Instead of\nrelying on mirrors (which disable tree-shaking and thus generate large JS size), the transformers\ngenerate getters, setters, annotations, and factories needed by Angular. The result is that\n<code>dart2js</code> can than enable tree-shaking and produce smaller output.</p>\n<p>To enable the transformers add this rule as shown below to your <code>pubspec.yaml</code>:</p>\n<pre><code>name: angular_dart_example\nversion: 0.0.1\ndependencies:\n  angular: '&gt;= 0.9.11'\n  browser: any\n  unittest: any\n\ntransformers:\n- angular\n</code></pre>\n<p>If your app structure makes use of directories for storing your templates,\nyou must also specify rules for <code>html_files</code> to ensure that the transformers pick up those\nfiles. You only need to specify the HTML files; the parser will infer the correct <code>.dart</code> and\nCSS files to include.</p>\n<p>For example:</p>\n<pre><code>transformers:\n- angular:\n    html_files:\n    - lib/_some_library_/_some_component_.html\n</code></pre>\n<p>If you need a way to build your app without transformers, you can use\n<a href=\"#angular-app-factory-static@id_staticApplicationFactory\">staticApplicationFactory</a> directly,\ninstead of <a href=\"#angular-app-factory@id_dynamicApplication\">applicationFactory</a>. See the\ndocumentation for the <a href=\"#angular-app-factory-static\">app:factory:static</a> library definition for\nmore on this use case.</p>","variables":{},"functions":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{}},"classes":{"class":[{"name":"AngularModule","qualifiedName":"angular/angular-app.AngularModule","preview":"<p>This is the top level module which describes all Angular components,\nincluding services, formatters and directives. When instantiating an Angular application\nthrough <a href=\"#angular-app-factory\">applicationFactory</a>, AngularModule is automatically included.</p>"},{"name":"Application","qualifiedName":"angular/angular-app.Application","preview":"<p>The Application class provides the mechanism by which Angular creates, configures,\nand runs an application. There are two implementations for this abstract class:</p>"}],"typedef":{},"error":[]},"packageName":"angular","packageIntro":"<h1>AngularDart</h1>\n<p>A port of <a href=\"http://angularjs.org/\">Angular</a> to <a href=\"http://www.dartlang.org\">Dart</a>.</p>\n<h2>Installing</h2>\n<p>Follow the instructions on <a href=\"http://pub.dartlang.org/packages/angular#installing\">AngularDart's page on pub</a>.</p>\n<h2>API documentation</h2>\n<p>Read the autogenerated <a href=\"https://docs.angulardart.org\">API documentation</a>.</p>\n<h2>Learning more</h2>\n<p>Study the <a href=\"https://angulardart.org/tutorial\">AngularDart Tutorial</a> to learn more about Angular\nin Dart.</p>\n<h2>Joining the discussion</h2>\n<p>Discuss AngularDart on the <a href=\"https://groups.google.com/forum/#!forum/angular-dart\">mailing list</a>,\nask questions on <a href=\"http://stackoverflow.com/questions/tagged/angular.dart\">StackOverflow</a>,\nfollow <a href=\"https://plus.google.com/117340875933142003564/posts\">+AngularDart on Google+</a>,\nand follow <a href=\"https://twitter.com/AngularDart\">@AngularDart</a> and <a href=\"https://twitter.com/AngularJS\">@AngularJS</a> on Twitter.</p>\n<h2>Filing bugs</h2>\n<p>Please file bugs and feature requests using the <a href=\"https://github.com/angular/angular.dart/issues?state=open\">Github Issues Tracker</a>.</p>\n<h2>I want to help</h2>\n<p>Excellent read up on <a href=\"https://github.com/angular/angular.dart/blob/master/CONTRIBUTING.md\">contributing</a>.</p>"}
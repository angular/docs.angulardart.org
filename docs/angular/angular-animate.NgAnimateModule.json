{"name":"NgAnimateModule","qualifiedName":"angular/angular-animate.NgAnimateModule","comment":"<p>Installing the NgAnimateModule will install a <a>angular/angular-animate.CssAnimate</a> implementation of\nthe <a>angular/angular-animate.NgAnimate</a> interface in your application. This will change the behavior\nof view construction, and some of the native directives to allow you to add\nand define css transition and keyframe animations for the styles of your\nelements.</p>\n<p>  Example html:</p>\n<pre><code>&lt;div ng-if=\"ctrl.myBoolean\" class=\"my-div\"&gt;...&lt;/div&gt;\n</code></pre>\n<p>  Example css defining an opacity transition over .5 seconds using the\n  <code>.ng-enter</code> and <code>.ng-leave</code> css classes:</p>\n<pre><code>.my-div.ng-enter {\n  transition: all 500ms;\n  opacity: 0;\n}\n.my-div.ng-enter-active {\n  opacity: 1;\n}\n\n.my-div.ng-leave {\n  transition: all 500ms;\n  opacity: 1;\n}\n.my-div.ng-leave-active {\n  opacity: 0;\n}\n</code></pre>","isAbstract":false,"superclass":"angular/angular-animate.Module","implements":[],"subclass":[],"variables":{},"inheritedVariables":{},"methods":{"setters":{},"getters":{},"constructors":{"":{"name":"","qualifiedName":"angular/angular-animate.NgAnimateModule.NgAnimateModule-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]}},"operators":{},"methods":{}},"inheritedMethods":{"setters":{"typeFactories=":{"name":"typeFactories=","qualifiedName":"angular/angular-animate.NgAnimateModule.typeFactories=","comment":"","commentFrom":"","inheritedFrom":"angular-animate.Module.typeFactories=","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"factories":{"name":"factories","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.Type","inner":[]},{"outer":"di.TypeFactory","inner":[]}]}],"value":"null","annotations":[]}},"annotations":[]}},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"angular/angular-animate.NgAnimateModule.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>angular/angular-animate.NgAnimateModule.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"angular/angular-animate.NgAnimateModule.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]},"typeFactories":{"name":"typeFactories","qualifiedName":"angular/angular-animate.NgAnimateModule.typeFactories","comment":"","commentFrom":"","inheritedFrom":"angular-animate.Module.typeFactories","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.Type","inner":[]},{"outer":"di.TypeFactory","inner":[]}]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"angular/angular-animate.NgAnimateModule.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>angular/angular-animate.NgAnimateModule.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>angular/angular-animate.NgAnimateModule.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"angular/angular-animate.NgAnimateModule.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"angular/angular-animate.NgAnimateModule.noSuchMethod","comment":"<p><a>angular/angular-animate.NgAnimateModule.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>angular/angular-animate.NgAnimateModule.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>angular/angular-animate.NgAnimateModule.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>angular/angular-animate.NgAnimateModule.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"value":{"name":"value","qualifiedName":"angular/angular-animate.NgAnimateModule.value","comment":"<p>Register binding to a concrete value.</p>\n<p>The <a>angular/angular-animate.NgAnimateModule.value.value</a> is what actually will be injected.</p>","commentFrom":"","inheritedFrom":"angular-animate.Module.value","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"id":{"name":"id","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Type","inner":[]}],"value":"null","annotations":[]},"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]},"withAnnotation":{"name":"withAnnotation","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Type","inner":[]}],"value":"null","annotations":[]},"visibility":{"name":"visibility","optional":true,"named":true,"default":false,"type":[{"outer":"di.Visibility","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"type":{"name":"type","qualifiedName":"angular/angular-animate.NgAnimateModule.type","comment":"<p>Register binding to a <a>dart-core.Type</a>.</p>\n<p>The <a>angular/angular-animate.NgAnimateModule.type.implementedBy</a> will be instantiated using new operator and the\nresulting instance will be injected. If no type is provided, then it's\nimplied that <a>angular/angular-animate.NgAnimateModule.type.id</a> should be instantiated.</p>","commentFrom":"","inheritedFrom":"angular-animate.Module.type","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"id":{"name":"id","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Type","inner":[]}],"value":"null","annotations":[]},"withAnnotation":{"name":"withAnnotation","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Type","inner":[]}],"value":"null","annotations":[]},"implementedBy":{"name":"implementedBy","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Type","inner":[]}],"value":"null","annotations":[]},"visibility":{"name":"visibility","optional":true,"named":true,"default":false,"type":[{"outer":"di.Visibility","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"factory":{"name":"factory","qualifiedName":"angular/angular-animate.NgAnimateModule.factory","comment":"<p>Register binding to a factory function.abstract</p>\n<p>The <a>angular/angular-animate.NgAnimateModule.factory.factoryFn</a> will be called and all its arguments will get injected.\nThe result of that function is the value that will be injected.</p>","commentFrom":"","inheritedFrom":"angular-animate.Module.factory","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"id":{"name":"id","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Type","inner":[]}],"value":"null","annotations":[]},"factoryFn":{"name":"factoryFn","optional":false,"named":false,"default":false,"type":[{"outer":"di.FactoryFn","inner":[]}],"value":"null","annotations":[]},"withAnnotation":{"name":"withAnnotation","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Type","inner":[]}],"value":"null","annotations":[]},"visibility":{"name":"visibility","optional":true,"named":true,"default":false,"type":[{"outer":"di.Visibility","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"install":{"name":"install","qualifiedName":"angular/angular-animate.NgAnimateModule.install","comment":"<p>Installs another module into this module. Bindings defined on this module\ntake precidence over the installed module.</p>","commentFrom":"","inheritedFrom":"angular-animate.Module.install","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"module":{"name":"module","optional":false,"named":false,"default":false,"type":[{"outer":"angular/angular-animate.Module","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"annotations":[],"generics":{}}
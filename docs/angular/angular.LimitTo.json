{"name":"LimitTo","qualifiedName":"angular/angular.LimitTo","comment":"<p>Creates a new List or String containing only a prefix/suffix of the\nelements.</p>\n<p>The number of elements to return is specified by the <code>limitTo</code> parameter.</p>\n<h1>Usage</h1>\n<pre><code>expression | limitTo:number\n</code></pre>\n<p>Where the input expression is a <a>angular/dart-core.List</a> or <a>angular/dart-core.String</a>, and <code>limitTo</code> is:</p><ul><li>\n<p><strong>a positive integer</strong>: return <em>number</em> items from the beginning of the list or string\nexpression.</p></li><li><strong>a negative integer</strong>: return <em>number</em> items from the end of the list or string expression.</li><li><strong><code>|limitTo|</code> greater than the size of the expression</strong>: return the entire expression.</li><li><strong>null</strong> or all other cases: return an empty list or string.</li></ul>\n<p>When operating on a <a>angular/dart-core.List</a>, the returned list is always a copy even when all\nthe elements are being returned.</p>\n<h1>Examples</h1>\n<pre><code>{{ 'abcdefghij' | limitTo: 4 }}       // output is 'abcd'\n{{ 'abcdefghij' | limitTo: -4 }}      // output is 'ghij'\n{{ 'abcdefghij' | limitTo: -100 }}    // output is 'abcdefghij'\n</code></pre>\n<p>This <code>ng-repeat</code> directive:</p>\n<pre><code>&lt;li ng-repeat=\"i in 'abcdefghij' | limitTo:-2\"&gt;{{i}}&lt;/li&gt;\n</code></pre>\n<p>produces the following:</p>\n<pre><code>&lt;li&gt;i&lt;/li&gt;\n&lt;li&gt;j&lt;/li&gt;\n</code></pre>","isAbstract":false,"superclass":"dart-core.Object","implements":["dart-core.Function"],"subclass":[],"variables":{},"inheritedVariables":{},"methods":{"setters":{},"getters":{},"constructors":{"":{"name":"","qualifiedName":"angular/angular.LimitTo.LimitTo-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"_injector":{"name":"_injector","optional":false,"named":false,"default":false,"type":[{"outer":"angular/angular.Injector","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"operators":{},"methods":{"call":{"name":"call","qualifiedName":"angular/angular.LimitTo.call","comment":"","commentFrom":"angular.LimitTo.call","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"items":{"name":"items","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"limit":{"name":"limit","optional":true,"named":false,"default":false,"type":[{"outer":"dart-core.int","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"angular/angular.LimitTo.hashCode","comment":"<p>Returns a hash code value that is compatible with <code>operator==</code>.</p>","commentFrom":"","inheritedFrom":"dart-core.Function.hashCode","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"angular/angular.LimitTo.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"angular/angular.LimitTo.==","comment":"<p>Test whether another object is equal to this function.</p>\n<p>System-created function objects are only equal to other functions.</p>\n<p>Two function objects are known to represent the same function if</p><ul><li>\n<p>It is the same object. Static and top-level functions are compile time\n  constants when used as values, so referring to the same function twice\n  always give the same object,</p></li><li>\n<p>or if they refer to the same member method extracted from the same object.\n  Extracting a member method as a function value twice gives equal, but\n  not necessarily identical, function values.</p></li></ul>\n<p>Function expressions never give rise to equal function objects. Each time\na function expression is evaluated, it creates a new closure value that\nis not known to be equal to other closures created by the same expression.</p>\n<p>Classes implementing <code>Function</code> by having a <code>call</code> method should have their\nown <code>operator==</code> and <code>hashCode</code> depending on the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Function.==","static":false,"abstract":true,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Object","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"angular/angular.LimitTo.noSuchMethod","comment":"<p><a>angular/angular.LimitTo.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>angular/angular.LimitTo.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>angular/angular.LimitTo.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>angular/angular.LimitTo.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"angular/angular.LimitTo.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[{"name":"angular/angular.Formatter","parameters":["name:'limitTo'"]}],"generics":{}}
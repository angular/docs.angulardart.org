{"name":"angular-core","qualifiedName":"angular/angular-core","comment":"<p>Core functionality for <a href=\"#angular/angular\">angular.dart</a>, a web framework for Dart.</p>\n<p>This library is included as part of <a href=\"#angular/angular\">angular.dart</a>. The angular.core library\nprovides all of the fundamental Classes and Type Definitions that provide the basis for\nformatters (in <a href=\"#angular-formatter\">angular .formatter</a>) and directives (in <a href=\"#angular-directive\">angular.directive</a>).</p>","variables":{},"functions":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{}},"classes":{"class":[{"name":"AST","qualifiedName":"angular/angular-core.AST","preview":"<p>RULES:\n - ASTs are reusable. Don't store scope/instance refs there\n - Parent knows about children, not the other way around.</p>"},{"name":"Animate","qualifiedName":"angular/angular-core.Animate","preview":"<p>The <a>angular/angular-core.Animate</a> service provides dom lifecycle management, detection and\nanalysis of css animations, and hooks for custom animations. When any of\nthese animations are run, <a>angular/angular-core.Animation</a>s are returned so the animation can be\ncontrolled and so that custom dom manipulations can occur when animations\ncomplete.</p>"},{"name":"Animation","qualifiedName":"angular/angular-core.Animation","preview":"<p>Animation handle for controlling and listening to animation completion.</p>"},{"name":"AnimationResult","qualifiedName":"angular/angular-core.AnimationResult","preview":"<p>Final result of an animation after it is no longer attached to the element.</p>"},{"name":"AvgStopwatch","qualifiedName":"angular/angular-core.AvgStopwatch"},{"name":"BoundExpression","qualifiedName":"angular/angular-core.BoundExpression"},{"name":"BoundViewFactory","qualifiedName":"angular/angular-core.BoundViewFactory","preview":"<p>BoundViewFactory is a <a>angular/angular-core.ViewFactory</a> which does not need Injector because\nit is pre-bound to an injector from the parent. This means that this\nBoundViewFactory can only be used from within a specific Directive such\nas NgRepeat, but it can not be stored in a cache.</p>"},{"name":"BrowserCookies","qualifiedName":"angular/angular-core.BrowserCookies","preview":"<p>This class provides low-level access to the browser's cookies. It is not meant to be used\ndirectly by applications. Use the <a>angular/angular-core.Cookies</a> service instead.</p>"},{"name":"CacheRegister","qualifiedName":"angular/angular-core.CacheRegister"},{"name":"CacheRegisterStats","qualifiedName":"angular/angular-core.CacheRegisterStats"},{"name":"CacheStats","qualifiedName":"angular/angular-core.CacheStats"},{"name":"CallArguments","qualifiedName":"angular/angular-core.CallArguments"},{"name":"ClosureAST","qualifiedName":"angular/angular-core.ClosureAST","preview":"<p>SYNTAX: fn(arg0, arg1, ...)</p>"},{"name":"ClosureMap","qualifiedName":"angular/angular-core.ClosureMap"},{"name":"CollectionAST","qualifiedName":"angular/angular-core.CollectionAST"},{"name":"Compiler","qualifiedName":"angular/angular-core.Compiler"},{"name":"CompilerConfig","qualifiedName":"angular/angular-core.CompilerConfig","preview":"<p>Global configuration options for the Compiler</p>"},{"name":"ConstantAST","qualifiedName":"angular/angular-core.ConstantAST","preview":"<p>SYNTAX: <em>context</em></p>"},{"name":"ContextReferenceAST","qualifiedName":"angular/angular-core.ContextReferenceAST","preview":"<p>SYNTAX: <em>context</em></p>"},{"name":"Cookies","qualifiedName":"angular/angular-core.Cookies","preview":"<p>Handling of browser cookies</p>"},{"name":"DirectiveInjector","qualifiedName":"angular/angular-core.DirectiveInjector"},{"name":"DirectiveMap","qualifiedName":"angular/angular-core.DirectiveMap"},{"name":"ElementProbe","qualifiedName":"angular/angular-core.ElementProbe","preview":"<p><a>angular/angular-core.ElementProbe</a> is attached to each Element in the DOM. Its sole purpose is\nto allow access to the <a>angular/di-injector.Injector</a>, <a>angular/angular-core.Scope</a>, and Directives for debugging and\nautomated test purposes. The information here is not used by Angular in any\nway.</p>"},{"name":"EventHandler","qualifiedName":"angular/angular-core.EventHandler","preview":"<p><a>angular/angular-core.EventHandler</a> is responsible for handling events bound using on-* syntax\n(i.e. <code>on-click=\"ctrl.doSomething();\"</code>). The root of the application has an\nEventHandler attached as does every <a>angular/angular-core-annotation_src.Component</a>.</p>"},{"name":"ExceptionHandler","qualifiedName":"angular/angular-core.ExceptionHandler","preview":"<p>Any uncaught exception in angular expressions is delegated to this service.\nThe default implementation logs exceptions into console.</p>"},{"name":"Expression","qualifiedName":"angular/angular-core.Expression"},{"name":"FieldGetterFactory","qualifiedName":"angular/angular-core.FieldGetterFactory"},{"name":"FieldReadAST","qualifiedName":"angular/angular-core.FieldReadAST","preview":"<p>SYNTAX: lhs.name.</p>"},{"name":"FormatterMap","qualifiedName":"angular/angular-core.FormatterMap","preview":"<p>Registry of formatters at runtime.</p>"},{"name":"FunctionApply","qualifiedName":"angular/angular-core.FunctionApply","preview":"<p>Extend this class if you wish to pretend to be a function, but you don't know\nnumber of arguments with which the function will get called with.</p>"},{"name":"Http","qualifiedName":"angular/angular-core.Http","preview":"<p>The <a>angular/angular-core.Http</a> service facilitates communication with the remote HTTP servers.\nIt uses dart:html's HttpRequest and provides a number of features on top\nof the core Dart library.</p>"},{"name":"HttpBackend","qualifiedName":"angular/angular-core.HttpBackend","preview":"<p>HTTP backend used by the <a>angular/angular-core.Http</a> service that delegates to dart:html's\nHttpRequest and deals with Dart bugs.</p>"},{"name":"HttpConfig","qualifiedName":"angular/angular-core.HttpConfig"},{"name":"HttpDefaultHeaders","qualifiedName":"angular/angular-core.HttpDefaultHeaders","preview":"<p>Default header configuration.</p>"},{"name":"HttpDefaults","qualifiedName":"angular/angular-core.HttpDefaults","preview":"<p>Injected into the <a>angular/angular-core.Http</a> service.  This class contains application-wide\nHTTP defaults.</p>"},{"name":"HttpInterceptor","qualifiedName":"angular/angular-core.HttpInterceptor","preview":"<p>HttpInterceptors are used to modify the Http request. They can be added to\n<a>angular/angular-core.HttpInterceptors</a> or passed into <a>angular/angular-core.Http.call</a>.</p>"},{"name":"HttpInterceptors","qualifiedName":"angular/angular-core.HttpInterceptors","preview":"<p>A list of <a>angular/angular-core.HttpInterceptor</a>s.</p>"},{"name":"HttpResponse","qualifiedName":"angular/angular-core.HttpResponse","preview":"<p>The response for an HTTP request.  Returned from the <a>angular/angular-core.Http</a> service.</p>"},{"name":"HttpResponseConfig","qualifiedName":"angular/angular-core.HttpResponseConfig","preview":"<p>The request configuration of the request associated with this response.</p>"},{"name":"Interpolate","qualifiedName":"angular/angular-core.Interpolate","preview":"<p>Compiles a string with markup into an expression. This service is used by the\nHTML Compiler service for data binding.</p>"},{"name":"LocationWrapper","qualifiedName":"angular/angular-core.LocationWrapper"},{"name":"MethodAST","qualifiedName":"angular/angular-core.MethodAST","preview":"<p>SYNTAX: lhs.method(arg0, arg1, ...)</p>"},{"name":"NgElement","qualifiedName":"angular/angular-core.NgElement"},{"name":"NoOpAnimation","qualifiedName":"angular/angular-core.NoOpAnimation","preview":"<p>Completed animation handle that is used when an animation is ignored and the\nfinal effect of the animation is immediately completed.</p>"},{"name":"NullTreeSanitizer","qualifiedName":"angular/angular-core.NullTreeSanitizer"},{"name":"Parser","qualifiedName":"angular/angular-core.Parser"},{"name":"PendingAsync","qualifiedName":"angular/angular-core.PendingAsync","preview":"<p>Tracks pending operations and notifies when they are all complete.</p>"},{"name":"PrototypeMap","qualifiedName":"angular/angular-core.PrototypeMap"},{"name":"PureFunctionAST","qualifiedName":"angular/angular-core.PureFunctionAST","preview":"<p>SYNTAX: fn(arg0, arg1, ...)</p>"},{"name":"ResourceResolverConfig","qualifiedName":"angular/angular-core.ResourceResolverConfig"},{"name":"ResourceUrlResolver","qualifiedName":"angular/angular-core.ResourceUrlResolver"},{"name":"RootScope","qualifiedName":"angular/angular-core.RootScope","preview":"<p>Every Angular application has exactly one RootScope. RootScope extends Scope, adding\nservices related to change detection, async unit-of-work processing, and DOM read/write queues.\nThe RootScope can not be destroyed.</p>"},{"name":"RootWatchGroup","qualifiedName":"angular/angular-core.RootWatchGroup","preview":"<p><a>angular/angular-core.RootWatchGroup</a></p>"},{"name":"Scope","qualifiedName":"angular/angular-core.Scope","preview":"<p><a>angular/angular-core.Scope</a> represents a collection of <a>angular/angular-core.Scope.watch</a>es observers, and a <a>angular/angular-core.Scope.context</a> for the watchers,\nobservers and <a>angular/angular-core.Scope.eval</a>uations. Scopes structure loosely mimics the DOM structure. Scopes and\nViews are bound to each other. As scopes are created and destroyed by ViewFactory they are\nresponsible for change detection, change processing and memory management.</p>"},{"name":"ScopeAware","qualifiedName":"angular/angular-core.ScopeAware","preview":"<p>When a <a>angular/angular-core-annotation_src.Directive</a> or the root context class implements <a>angular/angular-core.ScopeAware</a> the scope\nsetter will be called to set the <a>angular/angular-core.Scope</a> on this component.</p>"},{"name":"ScopeDigestTTL","qualifiedName":"angular/angular-core.ScopeDigestTTL","preview":"<p>Allows the configuration of Scope.digest iteration maximum time-to-live value. Digest keeps\nchecking the state of the watcher getters until it can execute one full iteration with no\nwatchers triggering. The TTL is used to prevent an infinite loop where watch A triggers watch B\nwhich in turn triggers watch A. If the system does not stabilize in TTL iterations then the\ndigest is stopped and an exception is thrown.</p>"},{"name":"ScopeEvent","qualifiedName":"angular/angular-core.ScopeEvent","preview":"<p>Injected into the listener function within <a>angular/angular-core.Scope.on</a> to provide event-specific details to the\nscope listener.</p>"},{"name":"ScopeStats","qualifiedName":"angular/angular-core.ScopeStats","preview":"<p>ScopeStats collects and emits statistics about a <a>angular/angular-core.Scope</a>.</p>"},{"name":"ScopeStatsConfig","qualifiedName":"angular/angular-core.ScopeStatsConfig","preview":"<p>ScopeStatsConfig is used to modify behavior of <a>angular/angular-core.ScopeStats</a>. You can use this\nobject to modify behavior at runtime too.</p>"},{"name":"ScopeStatsEmitter","qualifiedName":"angular/angular-core.ScopeStatsEmitter","preview":"<p>ScopeStatsEmitter is in charge of formatting the <a>angular/angular-core.ScopeStats</a> and outputting a message.</p>"},{"name":"TemplateCache","qualifiedName":"angular/angular-core.TemplateCache","preview":"<p>Infinite cache service for templates loaded from URLs.</p>"},{"name":"UrlRewriter","qualifiedName":"angular/angular-core.UrlRewriter"},{"name":"View","qualifiedName":"angular/angular-core.View","preview":"<p>A View is a fundamental building block of DOM. It is a chunk of DOM which\ncan not be structurally changed. A View can have <a>angular/angular-core.ViewPort</a> placeholders\nembedded in its DOM.  A <a>angular/angular-core.ViewPort</a> can contain other <a>angular/angular-core.View</a>s and it is the\nonly way in which DOM structure can be modified.</p>"},{"name":"ViewCache","qualifiedName":"angular/angular-core.ViewCache","preview":"<p>ViewCache is used to cache the compilation of templates into <a>angular/angular-core.View</a>s.\nIt can be used synchronously if HTML is known or asynchronously if the\ntemplate HTML needs to be looked up from the URL.</p>"},{"name":"ViewFactory","qualifiedName":"angular/angular-core.ViewFactory"},{"name":"ViewPort","qualifiedName":"angular/angular-core.ViewPort","preview":"<p>A ViewPort maintains an ordered list of <a>angular/angular-core.View</a>'s. It contains a\n<a>angular/angular-core.ViewPort.placeholder</a> node that is used as the insertion point for view nodes.</p>"},{"name":"Visitor","qualifiedName":"angular/angular-core.Visitor"},{"name":"VmTurnZone","qualifiedName":"angular/angular-core.VmTurnZone","preview":"<p>A Zone wrapper that lets you schedule tasks after its private microtask\nqueue is exhausted but before the next \"turn\", i.e. event loop iteration.\nThis lets you freely schedule microtasks that prepare data, and set an\n<a>angular/angular-core.VmTurnZone.onTurnDone</a> handler that will consume that data after it's ready but before\nthe browser has a chance to re-render.\nThe wrapper maintains an \"inner\" and \"outer\" Zone and a private queue of\nall the microtasks scheduled on the inner Zone.</p>"},{"name":"Watch","qualifiedName":"angular/angular-core.Watch","preview":"<p><a>angular/angular-core.Watch</a> corresponds to an individual watch registration on the watchGrp.</p>"},{"name":"WatchGroup","qualifiedName":"angular/angular-core.WatchGroup","preview":"<p><a>angular/angular-core.WatchGroup</a> is a logical grouping of a set of watches. <a>angular/angular-core.WatchGroup</a>s are\norganized into a hierarchical tree parent-children configuration.\n<a>angular/angular-core.WatchGroup</a> builds upon <a>angular/change_detection.ChangeDetector</a> and adds expression (field chains\nas in <code>a.b.c</code>) support as well as support function/closure/method (function\ninvocation as in <code>a.b()</code>) watching.</p>"}],"typedef":{"ChangeLog":{"name":"ChangeLog","qualifiedName":"angular/angular-core.ChangeLog","comment":"","return":"void","parameters":{"expression":{"name":"expression","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"current":{"name":"current","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"previous":{"name":"previous","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[],"generics":{}},"ReactionFn":{"name":"ReactionFn","qualifiedName":"angular/angular-core.ReactionFn","comment":"<p>A function that is notified of changes to the model.</p>\n<p>ReactionFn is a function implemented by the developer that executes when a change is detected\nin a watched expression.</p><ul><li>value: The current value of the watched expression.</li><li>previousValue: The previous value of the watched expression.</li></ul>\n<p>If the expression is watching a collection (a list or a map), then value is wrapped in\na <a>angular/change_detection.CollectionChangeItem</a> that lists all the changes.</p>","return":"void","parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"previousValue":{"name":"previousValue","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[],"generics":{},"preview":"<p>A function that is notified of changes to the model.</p>"},"RequestErrorInterceptor":{"name":"RequestErrorInterceptor","qualifiedName":"angular/angular-core.RequestErrorInterceptor","comment":"","return":"dynamic","parameters":{"dynamic":{"name":"dynamic","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[],"generics":{}},"RequestInterceptor":{"name":"RequestInterceptor","qualifiedName":"angular/angular-core.RequestInterceptor","comment":"","return":"dynamic","parameters":{"HttpResponseConfig":{"name":"HttpResponseConfig","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[],"generics":{}},"Response":{"name":"Response","qualifiedName":"angular/angular-core.Response","comment":"","return":"dynamic","parameters":{"HttpResponse":{"name":"HttpResponse","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[],"generics":{}},"ResponseError":{"name":"ResponseError","qualifiedName":"angular/angular-core.ResponseError","comment":"","return":"dynamic","parameters":{"dynamic":{"name":"dynamic","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[],"generics":{}},"WhenStableCallback":{"name":"WhenStableCallback","qualifiedName":"angular/angular-core.WhenStableCallback","comment":"","return":"void","parameters":{},"annotations":[],"generics":{}}},"error":[]},"packageName":"angular","packageIntro":"<h1>AngularDart</h1>\n<p>A port of <a href=\"http://angularjs.org/\">Angular</a> to <a href=\"http://www.dartlang.org\">Dart</a>.</p>\n<h2>Installing</h2>\n<p>Follow the instructions on <a href=\"http://pub.dartlang.org/packages/angular#installing\">AngularDart's page on pub</a>.</p>\n<h2>API documentation</h2>\n<p>Read the autogenerated <a href=\"https://docs.angulardart.org\">API documentation</a>.</p>\n<h2>Learning more</h2>\n<p>Study the <a href=\"https://angulardart.org/tutorial\">AngularDart Tutorial</a> to learn more about Angular\nin Dart.</p>\n<h2>Joining the discussion</h2>\n<p>Discuss AngularDart on the <a href=\"https://groups.google.com/forum/#!forum/angular-dart\">mailing list</a>,\nask questions on <a href=\"http://stackoverflow.com/questions/tagged/angular.dart\">StackOverflow</a>,\nfollow <a href=\"https://plus.google.com/117340875933142003564/posts\">+AngularDart on Google+</a>,\nand follow <a href=\"https://twitter.com/AngularDart\">@AngularDart</a> and <a href=\"https://twitter.com/AngularJS\">@AngularJS</a> on Twitter.</p>\n<h2>Filing bugs</h2>\n<p>Please file bugs and feature requests using the <a href=\"https://github.com/angular/angular.dart/issues?state=open\">Github Issues Tracker</a>.</p>\n<h2>I want to help</h2>\n<p>Excellent read up on <a href=\"https://github.com/angular/angular.dart/blob/master/CONTRIBUTING.md\">contributing</a>.</p>"}
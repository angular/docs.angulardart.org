{"name":"NgSourceDirective","qualifiedName":"angular/angular.NgSourceDirective","comment":"<p>In browser some attributes have network side-effect. If the attribute\nhas <code>{{interpolation}}</code> in it it may cause browser to fetch bogus URLs.</p>\n<p>Example: In <code>&lt;img src=\"{{username}}.png\"&gt;</code> the browser will fetch the image\n<code>http://server/{{username}}.png</code> before Angular has a chance to replace the\nattribute with data-bound url.</p>\n<p>For this reason we provide <code>ng-</code>prefixed attributes which avoid the issues\nmentioned above as in this example: <code>&lt;img ng-src=\"{{username}}.png\"&gt;</code>.</p>\n<p>The full list of supported attributes are:</p><ul><li>ng-href</li><li>ng-src</li><li>ng-srcset</li></ul>","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{"attrs":{"name":"attrs","qualifiedName":"angular/angular.NgSourceDirective.attrs","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"angular/angular.NodeAttrs","inner":[]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{"href=":{"name":"href=","qualifiedName":"angular/angular.NgSourceDirective.href=","comment":"","commentFrom":"angular.NgSourceDirective.href=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"src=":{"name":"src=","qualifiedName":"angular/angular.NgSourceDirective.src=","comment":"","commentFrom":"angular.NgSourceDirective.src=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"srcset=":{"name":"srcset=","qualifiedName":"angular/angular.NgSourceDirective.srcset=","comment":"","commentFrom":"angular.NgSourceDirective.srcset=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"getters":{},"constructors":{"":{"name":"","qualifiedName":"angular/angular.NgSourceDirective.NgSourceDirective-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"attrs":{"name":"attrs","optional":false,"named":false,"default":false,"type":[{"outer":"angular/angular.NodeAttrs","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"operators":{},"methods":{}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"angular/angular.NgSourceDirective.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>angular/angular.NgSourceDirective.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"angular/angular.NgSourceDirective.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"angular/angular.NgSourceDirective.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>angular/angular.NgSourceDirective.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>angular/angular.NgSourceDirective.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"angular/angular.NgSourceDirective.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"angular/angular.NgSourceDirective.noSuchMethod","comment":"<p><a>angular/angular.NgSourceDirective.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>angular/angular.NgSourceDirective.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>angular/angular.NgSourceDirective.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>angular/angular.NgSourceDirective.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"annotations":[{"name":"angular.NgDirective","parameters":[]},{"name":"angular.NgDirective","parameters":[]},{"name":"angular.NgDirective","parameters":[]}],"generics":{}}
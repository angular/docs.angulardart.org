{"name":"angular-core-annotation","qualifiedName":"angular/angular-core-annotation","comment":"<p>Angular class annotations for Directives, Formatters, and Injectables.</p>","variables":{},"functions":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{}},"classes":{"class":[{"name":"AttachAware","qualifiedName":"angular/angular-core-annotation.AttachAware","preview":"<p>A directives or components may chose to implements <a>angular/angular-core-annotation.AttachAware</a>.<a>angular/angular-core-annotation.AttachAware.attach</a> method.\nIf implemented the method will be called when the next scope digest occurs after\ncomponent instantiation. It is guaranteed that when <a>angular/angular-core-annotation.AttachAware.attach</a> is invoked, that all\nattribute mappings have already been processed.</p>"},{"name":"Component","qualifiedName":"angular/angular-core-annotation.Component","preview":"<p>Annotation placed on a class which should act as a controller for the\ncomponent. Angular components are a light-weight version of web-components.\nAngular components use shadow-DOM for rendering their templates.</p>"},{"name":"Controller","qualifiedName":"angular/angular-core-annotation.Controller","preview":"<p>Annotation placed on a class which should act as a controller for your\napplication.</p>"},{"name":"Decorator","qualifiedName":"angular/angular-core-annotation.Decorator","preview":"<p>Annotation placed on a class which should act as a directive.</p>"},{"name":"DetachAware","qualifiedName":"angular/angular-core-annotation.DetachAware","preview":"<p>A directives or components may chose to implements <a>angular/angular-core-annotation.DetachAware</a>.<a>angular/angular-core-annotation.DetachAware.detach</a> method.\nIf implemented the method will be called when the next associated scope is destroyed.</p>"},{"name":"Directive","qualifiedName":"angular/angular-core-annotation.Directive","preview":"<p>Abstract supper class of <a>angular/angular-core-annotation.Controller</a>, <a>angular/angular-core-annotation.Component</a>, and <a>angular/angular-core-annotation.Decorator</a>.</p>"},{"name":"DirectiveAnnotation","qualifiedName":"angular/angular-core-annotation.DirectiveAnnotation","preview":"<p>Abstract supper class of <a>angular/angular-core-annotation.NgAttr</a>, <a>angular/angular-core-annotation.NgCallback</a>, <a>angular/angular-core-annotation.NgOneWay</a>, <a>angular/angular-core-annotation.NgOneWayOneTime</a>, and <a>angular/angular-core-annotation.NgTwoWay</a>.</p>"},{"name":"DirectiveBinder","qualifiedName":"angular/angular-core-annotation.DirectiveBinder"},{"name":"Formatter","qualifiedName":"angular/angular-core-annotation.Formatter","preview":"<p>Use the @<a>angular/angular-core-annotation.Formatter</a> class annotation to identify a class as a formatter.</p>"},{"name":"NgAttr","qualifiedName":"angular/angular-core-annotation.NgAttr","preview":"<p>When applied as an annotation on a directive field specifies that\nthe field is to be mapped to DOM attribute with the provided <a>angular/angular-core-annotation.DirectiveAnnotation.attrName</a>.\nThe value of the attribute to be treated as a string, equivalent\nto <code>@</code> specification.</p>"},{"name":"NgCallback","qualifiedName":"angular/angular-core-annotation.NgCallback","preview":"<p>When applied as an annotation on a directive field specifies that the field is to be mapped to\nDOM attribute with the provided <a>angular/angular-core-annotation.DirectiveAnnotation.attrName</a>. The value of the attribute to be treated as a\nan expression, equivalent to <code>&amp;</code> specification.</p>"},{"name":"NgOneWay","qualifiedName":"angular/angular-core-annotation.NgOneWay","preview":"<p>When applied as an annotation on a directive field specifies that\nthe field is to be mapped to DOM attribute with the provided <a>angular/angular-core-annotation.DirectiveAnnotation.attrName</a>.\nThe value of the attribute to be treated as a one-way expression, equivalent\nto <code>=&gt;</code> specification.</p>"},{"name":"NgOneWayOneTime","qualifiedName":"angular/angular-core-annotation.NgOneWayOneTime","preview":"<p>When applied as an annotation on a directive field specifies that\nthe field is to be mapped to DOM attribute with the provided <a>angular/angular-core-annotation.DirectiveAnnotation.attrName</a>.\nThe value of the attribute to be treated as a one time one-way expression,\nequivalent to <code>=&gt;!</code> specification.</p>"},{"name":"NgTwoWay","qualifiedName":"angular/angular-core-annotation.NgTwoWay","preview":"<p>When applied as an annotation on a directive field specifies that\nthe field is to be mapped to DOM attribute with the provided <a>angular/angular-core-annotation.DirectiveAnnotation.attrName</a>.\nThe value of the attribute to be treated as a two-way expression,\nequivalent to <code>&lt;=&gt;</code> specification.</p>"},{"name":"ShadowRootAware","qualifiedName":"angular/angular-core-annotation.ShadowRootAware","preview":"<p>Implementing components <a>angular/angular-core-annotation.ShadowRootAware.onShadowRoot</a> method will be called when\nthe template for the component has been loaded and inserted into Shadow DOM.\nIt is guaranteed that when <a>angular/angular-core-annotation.ShadowRootAware.onShadowRoot</a> is invoked, that shadow DOM\nhas been loaded and is ready.</p>"},{"name":"Visibility","qualifiedName":"angular/angular-core-annotation.Visibility"}],"typedef":{"DirectiveBinderFn":{"name":"DirectiveBinderFn","qualifiedName":"angular/angular-core-annotation.DirectiveBinderFn","comment":"","return":"void","parameters":{"module":{"name":"module","optional":false,"named":false,"default":false,"type":[{"outer":"angular/angular-core-annotation.DirectiveBinder","inner":[]}],"value":null,"annotations":[]}},"annotations":[],"generics":{}}},"error":[]},"packageName":"angular","packageIntro":"<h1>AngularDart</h1>\n<p>A port of <a href=\"http://angularjs.org/\">Angular</a> to <a href=\"http://www.dartlang.org\">Dart</a>.</p>\n<h2>Installing</h2>\n<p>Follow the instructions on <a href=\"http://pub.dartlang.org/packages/angular#installing\">AngularDart's page on pub</a>.</p>\n<h2>API documentation</h2>\n<p>Read the autogenerated <a href=\"https://docs.angulardart.org\">API documentation</a>.</p>\n<h2>Learning more</h2>\n<p>Study the <a href=\"https://angulardart.org/tutorial\">AngularDart Tutorial</a> to learn more about Angular\nin Dart.</p>\n<h2>Joining the discussion</h2>\n<p>Discuss AngularDart on the <a href=\"https://groups.google.com/forum/#!forum/angular-dart\">mailing list</a>,\nask questions on <a href=\"http://stackoverflow.com/questions/tagged/angular.dart\">StackOverflow</a>,\nfollow <a href=\"https://plus.google.com/117340875933142003564/posts\">+AngularDart on Google+</a>,\nand follow <a href=\"https://twitter.com/AngularDart\">@AngularDart</a> and <a href=\"https://twitter.com/AngularJS\">@AngularJS</a> on Twitter.</p>\n<h2>Filing bugs</h2>\n<p>Please file bugs and feature requests using the <a href=\"https://github.com/angular/angular.dart/issues?state=open\">Github Issues Tracker</a>.</p>\n<h2>I want to help</h2>\n<p>Excellent read up on <a href=\"https://github.com/angular/angular.dart/blob/master/CONTRIBUTING.md\">contributing</a>.</p>"}
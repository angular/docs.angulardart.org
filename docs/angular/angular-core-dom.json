{"name":"angular-core-dom","qualifiedName":"angular/angular-core-dom","comment":"","variables":{},"functions":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{"forceNewDirectivesAndFilters":{"name":"forceNewDirectivesAndFilters","qualifiedName":"angular/angular-core-dom.forceNewDirectivesAndFilters","comment":"<p>Creates a child injector that allows loading new directives, filters and\nservices from the provided modules.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"di.Injector","inner":[]}],"parameters":{"injector":{"name":"injector","optional":false,"named":false,"default":false,"type":[{"outer":"di.Injector","inner":[]}],"value":"null","annotations":[]},"modules":{"name":"modules","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.List","inner":[{"outer":"angular/angular-core-dom.Module","inner":[]}]}],"value":"null","annotations":[]}},"annotations":[]},"cloneElements":{"name":"cloneElements","qualifiedName":"angular/angular-core-dom.cloneElements","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.List","inner":[{"outer":"dart-dom-html.Node","inner":[]}]}],"parameters":{"elements":{"name":"elements","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"classes":{"class":[{"name":"NgElement","qualifiedName":"angular/angular-core-dom.NgElement"},{"name":"WalkingCompiler","qualifiedName":"angular/angular-core-dom.WalkingCompiler"},{"name":"NullTreeSanitizer","qualifiedName":"angular/angular-core-dom.NullTreeSanitizer"},{"name":"TemplateCache","qualifiedName":"angular/angular-core-dom.TemplateCache","preview":"<p>Infinite cache service for templates loaded from URLs.</p>"},{"name":"TaggingViewFactory","qualifiedName":"angular/angular-core-dom.TaggingViewFactory"},{"name":"TaggingCompiler","qualifiedName":"angular/angular-core-dom.TaggingCompiler"},{"name":"DirectiveSelectorFactory","qualifiedName":"angular/angular-core-dom.DirectiveSelectorFactory","preview":"<p>Factory for creating a <a>angular/angular-core-dom.DirectiveSelector</a>.</p>"},{"name":"DirectiveSelector","qualifiedName":"angular/angular-core-dom.DirectiveSelector"},{"name":"NodeCursor","qualifiedName":"angular/angular-core-dom.NodeCursor"},{"name":"NgAttrMustacheDirective","qualifiedName":"angular/angular-core-dom.NgAttrMustacheDirective"},{"name":"NgTextMustacheDirective","qualifiedName":"angular/angular-core-dom.NgTextMustacheDirective"},{"name":"Http","qualifiedName":"angular/angular-core-dom.Http","preview":"<p>The <a>angular/angular-core-dom.Http</a> service facilitates communication with the remote HTTP servers.\nIt uses dart:html's HttpRequest and provides a number of features on top\nof the core Dart library.</p>"},{"name":"HttpDefaults","qualifiedName":"angular/angular-core-dom.HttpDefaults","preview":"<p>Injected into the <a>angular/angular-core-dom.Http</a> service.  This class contains application-wide\nHTTP defaults.</p>"},{"name":"HttpDefaultHeaders","qualifiedName":"angular/angular-core-dom.HttpDefaultHeaders","preview":"<p>Default header configuration.</p>"},{"name":"HttpResponse","qualifiedName":"angular/angular-core-dom.HttpResponse","preview":"<p>The response for an HTTP request.  Returned from the <a>angular/angular-core-dom.Http</a> service.</p>"},{"name":"HttpResponseConfig","qualifiedName":"angular/angular-core-dom.HttpResponseConfig","preview":"<p>The request configuration of the request associated with this response.</p>"},{"name":"HttpInterceptors","qualifiedName":"angular/angular-core-dom.HttpInterceptors","preview":"<p>A list of <a>angular/angular-core-dom.HttpInterceptor</a>s.</p>"},{"name":"DefaultTransformDataHttpInterceptor","qualifiedName":"angular/angular-core-dom.DefaultTransformDataHttpInterceptor","preview":"<p>The default transform data interceptor.abstract</p>"},{"name":"HttpInterceptor","qualifiedName":"angular/angular-core-dom.HttpInterceptor","preview":"<p>HttpInterceptors are used to modify the Http request. They can be added to\n<a>angular/angular-core-dom.HttpInterceptors</a> or passed into <a>angular/angular-core-dom.Http.call</a>.</p>"},{"name":"LocationWrapper","qualifiedName":"angular/angular-core-dom.LocationWrapper"},{"name":"HttpBackend","qualifiedName":"angular/angular-core-dom.HttpBackend","preview":"<p>HTTP backend used by the <a>angular/angular-core-dom.Http</a> service that delegates to dart:html's\nHttpRequest and deals with Dart bugs.</p>"},{"name":"UrlRewriter","qualifiedName":"angular/angular-core-dom.UrlRewriter"},{"name":"EventHandler","qualifiedName":"angular/angular-core-dom.EventHandler"},{"name":"TaggedElementBinder","qualifiedName":"angular/angular-core-dom.TaggedElementBinder"},{"name":"TaggedTextBinder","qualifiedName":"angular/angular-core-dom.TaggedTextBinder"},{"name":"ElementBinderTree","qualifiedName":"angular/angular-core-dom.ElementBinderTree"},{"name":"ElementBinderTreeRef","qualifiedName":"angular/angular-core-dom.ElementBinderTreeRef"},{"name":"ElementBinder","qualifiedName":"angular/angular-core-dom.ElementBinder","preview":"<p>ElementBinder is created by the Selector and is responsible for instantiating\nindividual directives and binding element properties.</p>"},{"name":"ElementBinderFactory","qualifiedName":"angular/angular-core-dom.ElementBinderFactory"},{"name":"FieldMetadataExtractor","qualifiedName":"angular/angular-core-dom.FieldMetadataExtractor"},{"name":"DirectiveMap","qualifiedName":"angular/angular-core-dom.DirectiveMap"},{"name":"TemplateLoader","qualifiedName":"angular/angular-core-dom.TemplateLoader","preview":"<p>TemplateLoader is an asynchronous access to ShadowRoot which is\nloaded asynchronously. It allows a Component to be notified when its\nShadowRoot is ready.</p>"},{"name":"NodeAttrs","qualifiedName":"angular/angular-core-dom.NodeAttrs","preview":"<p>NodeAttrs is a facade for element attributes. The facade is responsible\nfor normalizing attribute names as well as allowing access to the\nvalue of the directive.</p>"},{"name":"Compiler","qualifiedName":"angular/angular-core-dom.Compiler"},{"name":"DirectiveRef","qualifiedName":"angular/angular-core-dom.DirectiveRef"},{"name":"Cookies","qualifiedName":"angular/angular-core-dom.Cookies","preview":"<p>Cookies service</p>"},{"name":"BrowserCookies","qualifiedName":"angular/angular-core-dom.BrowserCookies","preview":"<p>This class provides low-level acces to the browser's cookies.\nIt is not meant to be used directly by applications.  Instead\nuse the Cookies service.</p>"},{"name":"ElementProbe","qualifiedName":"angular/angular-core-dom.ElementProbe","preview":"<p><a>angular/angular-core-dom.ElementProbe</a> is attached to each Element in the DOM. Its sole purpose is\nto allow access to the <a>angular/di.Injector</a>, <a>angular/angular-core.Scope</a>, and Directives for debugging and\nautomated test purposes. The information here is not used by Angular in any\nway.</p>"},{"name":"ViewCache","qualifiedName":"angular/angular-core-dom.ViewCache","preview":"<p>ViewCache is used to cache the compilation of templates into <a>angular/angular-core-dom.View</a>s.\nIt can be used synchronously if HTML is known or asynchronously if the\ntemplate HTML needs to be looked up from the URL.</p>"},{"name":"WalkingViewFactory","qualifiedName":"angular/angular-core-dom.WalkingViewFactory","preview":"<p><a>angular/angular-core-dom.WalkingViewFactory</a> is used to create new <a>angular/angular-core-dom.View</a>s. WalkingViewFactory is\ncreated by the <a>angular/angular-core-dom.Compiler</a> as a result of compiling a template.</p>"},{"name":"ViewFactory","qualifiedName":"angular/angular-core-dom.ViewFactory"},{"name":"BoundViewFactory","qualifiedName":"angular/angular-core-dom.BoundViewFactory","preview":"<p>BoundViewFactory is a <a>angular/angular-core-dom.ViewFactory</a> which does not need Injector because\nit is pre-bound to an injector from the parent. This means that this\nBoundViewFactory can only be used from within a specific Directive such\nas NgRepeat, but it can not be stored in a cache.</p>"},{"name":"ViewPort","qualifiedName":"angular/angular-core-dom.ViewPort","preview":"<p>A ViewPort maintains an ordered list of <a>angular/angular-core-dom.View</a>'s. It contains a\n<a>angular/angular-core-dom.ViewPort.placeholder</a> node that is used as the insertion point for view nodes.</p>"},{"name":"View","qualifiedName":"angular/angular-core-dom.View","preview":"<p>A View is a fundamental building block of DOM. It is a chunk of DOM which\ncan not be structurally changed. A View can have <a>angular/angular-core-dom.ViewPort</a> placeholders\nembedded in its DOM.  A <a>angular/angular-core-dom.ViewPort</a> can contain other <a>angular/angular-core-dom.View</a>s and it is the\nonly way in which DOM structure can be modified.</p>"},{"name":"AnimationResult","qualifiedName":"angular/angular-core-dom.AnimationResult","preview":"<p>Final result of an animation after it is no longer attached to the element.</p>"},{"name":"NoOpAnimation","qualifiedName":"angular/angular-core-dom.NoOpAnimation","preview":"<p>Completed animation handle that is used when an animation is ignored and the\nfinal effect of the animation is immediately completed.</p>"},{"name":"Animation","qualifiedName":"angular/angular-core-dom.Animation","preview":"<p>Animation handle for controlling and listening to animation completion.</p>"},{"name":"NgAnimate","qualifiedName":"angular/angular-core-dom.NgAnimate","preview":"<p>The <a>angular/angular-core-dom.NgAnimate</a> service provides dom lifecycle management, detection and\nanalysis of css animations, and hooks for custom animations. When any of\nthese animations are run, <a>angular/angular-core-dom.Animation</a>s are returned so the animation can be\ncontrolled and so that custom dom manipulations can occur when animations\ncomplete.</p>"},{"name":"NgShadowRootAware","qualifiedName":"angular/angular-core-dom.NgShadowRootAware","preview":"<p>Implementing components <a>angular/angular-core-dom.NgShadowRootAware.onShadowRoot</a> method will be called when\nthe template for the component has been loaded and inserted into Shadow DOM.\nIt is guaranteed that when <a>angular/angular-core-dom.NgShadowRootAware.onShadowRoot</a> is invoked, that shadow DOM\nhas been loaded and is ready.</p>"},{"name":"NgCoreDomModule","qualifiedName":"angular/angular-core-dom.NgCoreDomModule"}],"typedef":{"ResponseError":{"name":"ResponseError","qualifiedName":"angular/angular-core-dom.ResponseError","comment":"","return":"dynamic","parameters":{"dynamic":{"name":"dynamic","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[],"generics":{}},"Response":{"name":"Response","qualifiedName":"angular/angular-core-dom.Response","comment":"","return":"dynamic","parameters":{"HttpResponse":{"name":"HttpResponse","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[],"generics":{}},"RequestErrorInterceptor":{"name":"RequestErrorInterceptor","qualifiedName":"angular/angular-core-dom.RequestErrorInterceptor","comment":"","return":"dynamic","parameters":{"dynamic":{"name":"dynamic","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[],"generics":{}},"RequestInterceptor":{"name":"RequestInterceptor","qualifiedName":"angular/angular-core-dom.RequestInterceptor","comment":"","return":"dynamic","parameters":{"HttpResponseConfig":{"name":"HttpResponseConfig","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[],"generics":{}},"EventFunction":{"name":"EventFunction","qualifiedName":"angular/angular-core-dom.EventFunction","comment":"","return":"void","parameters":{"event":{"name":"event","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[],"generics":{}},"ObserverChanged":{"name":"ObserverChanged","qualifiedName":"angular/angular-core-dom.ObserverChanged","comment":"<p>Callback function used to notify of observer changes.</p>","return":"void","parameters":{"hasListeners":{"name":"hasListeners","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"null","annotations":[]}},"annotations":[],"generics":{},"preview":"<p>Callback function used to notify of observer changes.</p>"},"AttributeChanged":{"name":"AttributeChanged","qualifiedName":"angular/angular-core-dom.AttributeChanged","comment":"<p>Callback function used to notify of attribute changes.</p>","return":"dynamic","parameters":{"newValue":{"name":"newValue","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[],"generics":{},"preview":"<p>Callback function used to notify of attribute changes.</p>"},"ApplyMapping":{"name":"ApplyMapping","qualifiedName":"angular/angular-core-dom.ApplyMapping","comment":"","return":"dynamic","parameters":{"attrs":{"name":"attrs","optional":false,"named":false,"default":false,"type":[{"outer":"angular/angular-core-dom.NodeAttrs","inner":[]}],"value":"null","annotations":[]},"scope":{"name":"scope","optional":false,"named":false,"default":false,"type":[{"outer":"angular-core.Scope","inner":[]}],"value":"null","annotations":[]},"dst":{"name":"dst","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Object","inner":[]}],"value":"null","annotations":[]},"filters":{"name":"filters","optional":false,"named":false,"default":false,"type":[{"outer":"angular-core.FilterMap","inner":[]}],"value":"null","annotations":[]},"notify":{"name":"notify","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Function","inner":[]}],"value":"null","annotations":[]}},"annotations":[],"generics":{}}},"error":[]},"packageName":"angular","packageIntro":"<h1>AngularDart</h1>\n<p>A port of <a href=\"http://angularjs.org/\">Angular</a> to <a href=\"http://www.dartlang.org\">Dart</a>.</p>\n<h2>Installing</h2>\n<p>Follow the instructions on <a href=\"http://pub.dartlang.org/packages/angular#installing\">AngularDart's page on pub</a>.</p>\n<h2>API Documentation</h2>\n<p><a href=\"https://docs.angulardart.org\">API documentation</a>.</p>\n<h2>Learning more</h2>\n<p>Study the <a href=\"https://angulardart.org/tutorial\">AngularDart Tutorial</a> to learn more about Angular\nin Dart.</p>\n<h2>Joining the discussion</h2>\n<p>Discuss AngularDart on the <a href=\"https://groups.google.com/forum/#!forum/angular-dart\">mailing list</a>,\nask questions on <a href=\"http://stackoverflow.com/questions/tagged/angular.dart\">StackOverflow</a>,\nfollow <a href=\"https://plus.google.com/117340875933142003564/posts\">+AngularDart on Google+</a>,\nand follow <a href=\"https://twitter.com/AngularDart\">@AngularDart</a> and <a href=\"https://twitter.com/AngularJS\">@AngularJS</a> on Twitter.</p>\n<h2>Filing bugs</h2>\n<p>Please file bugs and feature requests using the <a href=\"https://github.com/angular/angular.dart/issues?state=open\">Github Issues Tracker</a>.</p>\n<h2>I want to help</h2>\n<p>Excellent read up on <a href=\"https://github.com/angular/angular.dart/blob/master/CONTRIBUTING.md\">contributing</a>.</p>"}
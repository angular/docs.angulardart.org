{"name":"ElementBinder","qualifiedName":"angular/angular-core-dom.ElementBinder","comment":"<p>ElementBinder is created by the Selector and is responsible for instantiating\nindividual directives and binding element properties.</p>","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{"onEvents":{"name":"onEvents","qualifiedName":"angular/angular.ElementBinder.onEvents","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dynamic","inner":[]}],"annotations":[]},"decorators":{"name":"decorators","qualifiedName":"angular/angular.ElementBinder.decorators","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dynamic","inner":[]}],"annotations":[]},"template":{"name":"template","qualifiedName":"angular/angular.ElementBinder.template","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"angular/angular.DirectiveRef","inner":[]}],"annotations":[]},"templateViewFactory":{"name":"templateViewFactory","qualifiedName":"angular/angular.ElementBinder.templateViewFactory","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"angular/angular.ViewFactory","inner":[]}],"annotations":[]},"component":{"name":"component","qualifiedName":"angular/angular.ElementBinder.component","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"angular/angular.DirectiveRef","inner":[]}],"annotations":[]},"childMode":{"name":"childMode","qualifiedName":"angular/angular.ElementBinder.childMode","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{"hasTemplate":{"name":"hasTemplate","qualifiedName":"angular/angular-core-dom.ElementBinder.hasTemplate","comment":"","commentFrom":"angular.ElementBinder.hasTemplate","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"shouldCompileChildren":{"name":"shouldCompileChildren","qualifiedName":"angular/angular-core-dom.ElementBinder.shouldCompileChildren","comment":"","commentFrom":"angular.ElementBinder.shouldCompileChildren","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"templateBinder":{"name":"templateBinder","qualifiedName":"angular/angular-core-dom.ElementBinder.templateBinder","comment":"","commentFrom":"angular.ElementBinder.templateBinder","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"angular/angular-core-dom.ElementBinder","inner":[]}],"parameters":{},"annotations":[]},"hasDirectivesOrEvents":{"name":"hasDirectivesOrEvents","qualifiedName":"angular/angular-core-dom.ElementBinder.hasDirectivesOrEvents","comment":"","commentFrom":"angular.ElementBinder.hasDirectivesOrEvents","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"angular/angular-core-dom.ElementBinder.ElementBinder-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"_parser":{"name":"_parser","optional":false,"named":false,"default":false,"type":[{"outer":"angular-core-parser.Parser","inner":[]}],"value":"null","annotations":[]},"_perf":{"name":"_perf","optional":false,"named":false,"default":false,"type":[{"outer":"perf_api.Profiler","inner":[]}],"value":"null","annotations":[]},"_expando":{"name":"_expando","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Expando","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"forTransclusion":{"name":"forTransclusion","qualifiedName":"angular/angular-core-dom.ElementBinder.ElementBinder-forTransclusion","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"angular/angular-core-dom.ElementBinder","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"operators":{},"methods":{"addDirective":{"name":"addDirective","qualifiedName":"angular/angular-core-dom.ElementBinder.addDirective","comment":"","commentFrom":"angular.ElementBinder.addDirective","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"ref":{"name":"ref","optional":false,"named":false,"default":false,"type":[{"outer":"angular/angular-core-dom.DirectiveRef","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"bind":{"name":"bind","qualifiedName":"angular/angular-core-dom.ElementBinder.bind","comment":"","commentFrom":"angular.ElementBinder.bind","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"di.Injector","inner":[]}],"parameters":{"view":{"name":"view","optional":false,"named":false,"default":false,"type":[{"outer":"angular/angular-core-dom.View","inner":[]}],"value":"null","annotations":[]},"parentInjector":{"name":"parentInjector","optional":false,"named":false,"default":false,"type":[{"outer":"di.Injector","inner":[]}],"value":"null","annotations":[]},"node":{"name":"node","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.Node","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"createMappings":{"name":"createMappings","qualifiedName":"angular/angular-core-dom.ElementBinder.createMappings","comment":"","commentFrom":"angular.ElementBinder.createMappings","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"ref":{"name":"ref","optional":false,"named":false,"default":false,"type":[{"outer":"angular/angular-core-dom.DirectiveRef","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"angular/angular-core-dom.ElementBinder.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"dart-core.Object.toString","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"angular/angular-core-dom.ElementBinder.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>angular/angular-core-dom.ElementBinder.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"angular/angular-core-dom.ElementBinder.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"angular/angular-core-dom.ElementBinder.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>angular/angular-core-dom.ElementBinder.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>angular/angular-core-dom.ElementBinder.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"angular/angular-core-dom.ElementBinder.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"angular/angular-core-dom.ElementBinder.noSuchMethod","comment":"<p><a>angular/angular-core-dom.ElementBinder.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>angular/angular-core-dom.ElementBinder.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>angular/angular-core-dom.ElementBinder.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>angular/angular-core-dom.ElementBinder.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"annotations":[],"generics":{}}
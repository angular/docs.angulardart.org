{"name":"NgBindTypeForDateLike","qualifiedName":"angular/angular-directive.NgBindTypeForDateLike","comment":"<p>Subordinate directive to <code>InputDateLike</code> that specifies the type for date/time related values.\n<code>Selector: input[type=date|time|datetime|datetime-local|month|week][ng-model][ng-bind-type]</code></p>\n<p>This directive controls which IDL attribute is read and thus sets the type. This allows an app\nto support browsers that deviate from the HTML5 standard for date/time.</p>\n<p>Recognized values for this directive are:</p><ul><li><a>angular/angular-directive.NgBindTypeForDateLike.DATE</a>: <code>dom.InputElement.valueAsDate</code> is read. (This is the default.)</li><li><a>angular/angular-directive.NgBindTypeForDateLike.NUMBER</a>: <code>dom.InputElement.valueAsNumber</code> is read.</li><li><a>angular/angular-directive.NgBindTypeForDateLike.STRING</a>: <code>dom.InputElement.value</code> is read.</li></ul>","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{"DATE":{"name":"DATE","qualifiedName":"angular/angular-directive.NgBindTypeForDateLike.DATE","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dynamic","inner":[]}],"annotations":[]},"DEFAULT":{"name":"DEFAULT","qualifiedName":"angular/angular-directive.NgBindTypeForDateLike.DEFAULT","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dynamic","inner":[]}],"annotations":[]},"NUMBER":{"name":"NUMBER","qualifiedName":"angular/angular-directive.NgBindTypeForDateLike.NUMBER","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dynamic","inner":[]}],"annotations":[]},"STRING":{"name":"STRING","qualifiedName":"angular/angular-directive.NgBindTypeForDateLike.STRING","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dynamic","inner":[]}],"annotations":[]},"VALID_VALUES":{"name":"VALID_VALUES","qualifiedName":"angular/angular-directive.NgBindTypeForDateLike.VALID_VALUES","comment":"","final":false,"static":true,"constant":true,"type":[{"outer":"dynamic","inner":[]}],"annotations":[]},"inputElement":{"name":"inputElement","qualifiedName":"angular/angular-directive.NgBindTypeForDateLike.inputElement","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dart-dom-html.InputElement","inner":[]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{"idlAttrKind=":{"name":"idlAttrKind=","qualifiedName":"angular/angular-directive.NgBindTypeForDateLike.idlAttrKind=","comment":"","commentFrom":"angular-directive.NgBindTypeForDateLike.idlAttrKind=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"_kind":{"name":"_kind","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]}},"annotations":[{"name":"angular/angular-core-annotation_src.NgAttr","parameters":["'ng-bind-type'"]}]},"inputTypedValue=":{"name":"inputTypedValue=","qualifiedName":"angular/angular-directive.NgBindTypeForDateLike.inputTypedValue=","comment":"","commentFrom":"angular-directive.NgBindTypeForDateLike.inputTypedValue=","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"inputValue":{"name":"inputValue","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"inputValueAsDate=":{"name":"inputValueAsDate=","qualifiedName":"angular/angular-directive.NgBindTypeForDateLike.inputValueAsDate=","comment":"<p>Set input's <code>valueAsDate</code>. Argument is normalized to UTC if necessary\n(per HTML standard).</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"dt":{"name":"dt","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.DateTime","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"getters":{"idlAttrKind":{"name":"idlAttrKind","qualifiedName":"angular/angular-directive.NgBindTypeForDateLike.idlAttrKind","comment":"","commentFrom":"angular-directive.NgBindTypeForDateLike.idlAttrKind","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"inputTypedValue":{"name":"inputTypedValue","qualifiedName":"angular/angular-directive.NgBindTypeForDateLike.inputTypedValue","comment":"","commentFrom":"angular-directive.NgBindTypeForDateLike.inputTypedValue","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]},"inputValueAsDate":{"name":"inputValueAsDate","qualifiedName":"angular/angular-directive.NgBindTypeForDateLike.inputValueAsDate","comment":"<p>Input's <code>valueAsDate</code> normalized to UTC (per HTML5 std).</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.DateTime","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"angular/angular-directive.NgBindTypeForDateLike.NgBindTypeForDateLike-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"inputElement":{"name":"inputElement","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.Element","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"operators":{},"methods":{}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"angular/angular-directive.NgBindTypeForDateLike.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>angular/angular-directive.NgBindTypeForDateLike.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"angular/angular-directive.NgBindTypeForDateLike.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"angular/angular-directive.NgBindTypeForDateLike.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>angular/angular-directive.NgBindTypeForDateLike.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>angular/angular-directive.NgBindTypeForDateLike.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"angular/angular-directive.NgBindTypeForDateLike.noSuchMethod","comment":"<p><a>angular/angular-directive.NgBindTypeForDateLike.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>angular/angular-directive.NgBindTypeForDateLike.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>angular/angular-directive.NgBindTypeForDateLike.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>angular/angular-directive.NgBindTypeForDateLike.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"angular/angular-directive.NgBindTypeForDateLike.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[{"name":"angular/angular-core-annotation_src.Decorator","parameters":["selector:'input[type=date][ng-model][ng-bind-type]'","visibility:Visibility.LOCAL"]},{"name":"angular/angular-core-annotation_src.Decorator","parameters":["selector:'input[type=time][ng-model][ng-bind-type]'","visibility:Visibility.LOCAL"]},{"name":"angular/angular-core-annotation_src.Decorator","parameters":["selector:'input[type=datetime][ng-model][ng-bind-type]'","visibility:Visibility.LOCAL"]},{"name":"angular/angular-core-annotation_src.Decorator","parameters":["selector:'input[type=datetime-local][ng-model][ng-bind-type]'","visibility:Visibility.LOCAL"]},{"name":"angular/angular-core-annotation_src.Decorator","parameters":["selector:'input[type=month][ng-model][ng-bind-type]'","visibility:Visibility.LOCAL"]},{"name":"angular/angular-core-annotation_src.Decorator","parameters":["selector:'input[type=week][ng-model][ng-bind-type]'","visibility:Visibility.LOCAL"]}],"generics":{}}
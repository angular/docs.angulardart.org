{"name":"Http","qualifiedName":"angular/angular-core.Http","comment":"<p>The <a>angular/angular-core.Http</a> service facilitates communication with the remote HTTP servers.\nIt uses dart:html's HttpRequest and provides a number of features on top\nof the core Dart library.</p>\n<p>For unit testing, applications should use the MockHttpBackend service.</p>\n<h1>General usage</h1>\n<p>The <a>angular/angular-core.Http.call</a> method takes a number of named parameters and returns a\nFuture&lt;HttpResponse>.</p>\n<pre><code> http(method: 'GET', url: '/someUrl')\n   .then((HttpResponse response) { .. },\n         onError: (HttpRequest request) { .. });\n</code></pre>\n<p>A response status code between 200 and 299 is considered a success status and\nwill result in the 'then' being called. Note that if the response is a\nredirect, Dart's HttpRequest will transparently follow it, meaning that the\nerror callback will not be called for such responses.</p>\n<h1>Shortcut methods</h1>\n<p>The Http service also defines a number of shortcuts:</p>\n<pre><code> http.get('/someUrl') is the same as http(method: 'GET', url: '/someUrl')\n</code></pre>\n<p>See the method definitions below.</p>\n<h1>Setting HTTP Headers</h1>\n<p>The <a>angular/angular-core.Http</a> service will add certain HTTP headers to requests.  These defaults\ncan be configured using the <a>angular/angular-core.HttpDefaultHeaders</a> object.  The defaults are:</p><ul><li>For all requests: <code>Accept: application/json, text/plain, * / *</code></li><li>For POST, PUT, PATCH requests: <code>Content-Type: application/json</code></li></ul>\n<h1>Caching</h1>\n<p>To enable caching, pass a <a>angular/angular-core.Cache</a> object into the <a>angular/angular-core.Http.call</a> method.  The <a>angular/angular-core.Http</a>\nservice will store responses in the cache and return the response for\nany matching requests.</p>\n<p>Note that data is returned through a Future, regardless of whether it\ncame from the <a>angular/angular-core.Cache</a> or the server.</p>\n<p>If there are multiple GET requests for the same not-yet-in-cache URL\nwhile a cache is in use, only one request to the server will be made.</p>\n<h1>Interceptors</h1>\n<p>Http uses the interceptors from <a>angular/angular-core.HttpInterceptors</a>. You can also include\ninterceptors in the <a>angular/angular-core.Http.call</a> method.</p>\n<h1>Security Considerations</h1>\n<p>NOTE: &lt; not yet documented ></p>","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{"defaults":{"name":"defaults","qualifiedName":"angular/angular.Http.defaults","comment":"<p>The defaults for <a>angular/angular-core.Http</a></p>","final":false,"static":false,"constant":false,"type":[{"outer":"angular/angular.HttpDefaults","inner":[]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{"pendingRequests":{"name":"pendingRequests","qualifiedName":"angular/angular-core.Http.pendingRequests","comment":"<p>Returns an <a>dart-core.Iterable</a> of [Future] [HttpResponse]s for the requests\nthat the <a>angular/angular-core.Http</a> service is currently waiting for.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Iterable","inner":[{"outer":"dart-async.Future","inner":[{"outer":"angular/angular-core.HttpResponse","inner":[]}]}]}],"parameters":{},"annotations":[]}},"constructors":{"":{"name":"","qualifiedName":"angular/angular-core.Http.Http-","comment":"<p>Constructor, useful for DI.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"_cookies":{"name":"_cookies","optional":false,"named":false,"default":false,"type":[{"outer":"angular/angular-core.BrowserCookies","inner":[]}],"value":null,"annotations":[]},"_location":{"name":"_location","optional":false,"named":false,"default":false,"type":[{"outer":"angular/angular-core.LocationWrapper","inner":[]}],"value":null,"annotations":[]},"_rewriter":{"name":"_rewriter","optional":false,"named":false,"default":false,"type":[{"outer":"angular/angular-core.UrlRewriter","inner":[]}],"value":null,"annotations":[]},"_backend":{"name":"_backend","optional":false,"named":false,"default":false,"type":[{"outer":"angular/angular-core.HttpBackend","inner":[]}],"value":null,"annotations":[]},"defaults":{"name":"defaults","optional":false,"named":false,"default":false,"type":[{"outer":"angular/angular-core.HttpDefaults","inner":[]}],"value":null,"annotations":[]},"_interceptors":{"name":"_interceptors","optional":false,"named":false,"default":false,"type":[{"outer":"angular/angular-core.HttpInterceptors","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"operators":{},"methods":{"call":{"name":"call","qualifiedName":"angular/angular-core.Http.call","comment":"<p>Returns a Future&lt;HttpResponse> when the request is fulfilled.</p>\n<p>Named Parameters:\n- method: HTTP method (e.g. 'GET', 'POST', etc)\n- url: Absolute or relative URL of the resource being requested.\n- data: Data to be sent as the request message data.\n- params: Map of strings or objects which will be turned to</p>\n<pre><code>     `?key1=value1&amp;key2=value2` after the url. If the values are\n      not strings, they will be JSONified.\n</code></pre><ul><li>\n<p>headers: Map of strings or functions which return strings representing\n HTTP headers to send to the server. If the return value of a function\n is null, the header will not be sent.</p></li><li>\n<p>withCredentials: True if cross-site requests should use credentials such as cookies or\n authorization headers; false otherwise. If not specified, defaults to false.</p></li><li>\n<p>xsrfHeaderName: XSRF header name sent with the request. If not specified\n defaults.xsrfHeaderName is used.</p></li><li>xsrfCookieName: XSRF cookie name. If not specified defaults.xsrfCookieName is used.</li><li>interceptors: Either a <a>angular/angular-core.HttpInterceptor</a> or a <a>angular/angular-core.HttpInterceptors</a></li><li>\n<p>cache: Boolean or <a>angular/angular-core.Cache</a>.  If true, null or not specified at all, the default cache will be\n used. If false, no cache will be used. If object of type <a>angular/angular-core.Cache</a> is provided, that object\n will be used as cache.</p></li><li>timeout: deprecated</li></ul>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"angular/angular-core.HttpResponse","inner":[]}]}],"parameters":{"url":{"name":"url","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"method":{"name":"method","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"data":{"name":"data","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"params":{"name":"params","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.String","inner":[]},{"outer":"dynamic","inner":[]}]}],"value":null,"annotations":[]},"headers":{"name":"headers","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.String","inner":[]},{"outer":"dynamic","inner":[]}]}],"value":null,"annotations":[]},"withCredentials":{"name":"withCredentials","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]},"xsrfHeaderName":{"name":"xsrfHeaderName","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"xsrfCookieName":{"name":"xsrfCookieName","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"interceptors":{"name":"interceptors","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"cache":{"name":"cache","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"timeout":{"name":"timeout","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"delete":{"name":"delete","qualifiedName":"angular/angular-core.Http.delete","comment":"<p>Shortcut method for DELETE requests.  See <a>angular/angular-core.Http.call</a> for a complete description\nof parameters.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"angular/angular-core.HttpResponse","inner":[]}]}],"parameters":{"url":{"name":"url","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"data":{"name":"data","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"params":{"name":"params","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.String","inner":[]},{"outer":"dynamic","inner":[]}]}],"value":null,"annotations":[]},"headers":{"name":"headers","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.String","inner":[]},{"outer":"dart-core.String","inner":[]}]}],"value":null,"annotations":[]},"withCredentials":{"name":"withCredentials","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]},"xsrfHeaderName":{"name":"xsrfHeaderName","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"xsrfCookieName":{"name":"xsrfCookieName","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"interceptors":{"name":"interceptors","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"cache":{"name":"cache","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"timeout":{"name":"timeout","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"get":{"name":"get","qualifiedName":"angular/angular-core.Http.get","comment":"<p>Shortcut method for GET requests.  See <a>angular/angular-core.Http.call</a> for a complete description\nof parameters.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"angular/angular-core.HttpResponse","inner":[]}]}],"parameters":{"url":{"name":"url","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"params":{"name":"params","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.String","inner":[]},{"outer":"dynamic","inner":[]}]}],"value":null,"annotations":[]},"headers":{"name":"headers","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.String","inner":[]},{"outer":"dart-core.String","inner":[]}]}],"value":null,"annotations":[]},"withCredentials":{"name":"withCredentials","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]},"xsrfHeaderName":{"name":"xsrfHeaderName","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"xsrfCookieName":{"name":"xsrfCookieName","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"interceptors":{"name":"interceptors","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"cache":{"name":"cache","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"timeout":{"name":"timeout","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"head":{"name":"head","qualifiedName":"angular/angular-core.Http.head","comment":"<p>Shortcut method for HEAD requests.  See <a>angular/angular-core.Http.call</a> for a complete description\nof parameters.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"angular/angular-core.HttpResponse","inner":[]}]}],"parameters":{"url":{"name":"url","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"data":{"name":"data","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"params":{"name":"params","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.String","inner":[]},{"outer":"dynamic","inner":[]}]}],"value":null,"annotations":[]},"headers":{"name":"headers","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.String","inner":[]},{"outer":"dart-core.String","inner":[]}]}],"value":null,"annotations":[]},"withCredentials":{"name":"withCredentials","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]},"xsrfHeaderName":{"name":"xsrfHeaderName","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"xsrfCookieName":{"name":"xsrfCookieName","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"interceptors":{"name":"interceptors","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"cache":{"name":"cache","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"timeout":{"name":"timeout","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"jsonp":{"name":"jsonp","qualifiedName":"angular/angular-core.Http.jsonp","comment":"<p>Shortcut method for JSONP requests.  See <a>angular/angular-core.Http.call</a> for a complete description\nof parameters.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"angular/angular-core.HttpResponse","inner":[]}]}],"parameters":{"url":{"name":"url","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"data":{"name":"data","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"params":{"name":"params","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.String","inner":[]},{"outer":"dynamic","inner":[]}]}],"value":null,"annotations":[]},"headers":{"name":"headers","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.String","inner":[]},{"outer":"dart-core.String","inner":[]}]}],"value":null,"annotations":[]},"withCredentials":{"name":"withCredentials","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]},"xsrfHeaderName":{"name":"xsrfHeaderName","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"xsrfCookieName":{"name":"xsrfCookieName","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"interceptors":{"name":"interceptors","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"cache":{"name":"cache","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"timeout":{"name":"timeout","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"parseHeaders":{"name":"parseHeaders","qualifiedName":"angular/angular-core.Http.parseHeaders","comment":"<p>Parse raw headers into key-value object</p>","commentFrom":"","inheritedFrom":"","static":true,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.String","inner":[]},{"outer":"dart-core.String","inner":[]}]}],"parameters":{"value":{"name":"value","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.HttpRequest","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"post":{"name":"post","qualifiedName":"angular/angular-core.Http.post","comment":"<p>Shortcut method for POST requests.  See <a>angular/angular-core.Http.call</a> for a complete description\nof parameters.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"angular/angular-core.HttpResponse","inner":[]}]}],"parameters":{"url":{"name":"url","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"data":{"name":"data","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"params":{"name":"params","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.String","inner":[]},{"outer":"dynamic","inner":[]}]}],"value":null,"annotations":[]},"headers":{"name":"headers","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.String","inner":[]},{"outer":"dart-core.String","inner":[]}]}],"value":null,"annotations":[]},"withCredentials":{"name":"withCredentials","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]},"xsrfHeaderName":{"name":"xsrfHeaderName","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"xsrfCookieName":{"name":"xsrfCookieName","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"interceptors":{"name":"interceptors","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"cache":{"name":"cache","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"timeout":{"name":"timeout","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"put":{"name":"put","qualifiedName":"angular/angular-core.Http.put","comment":"<p>Shortcut method for PUT requests.  See <a>angular/angular-core.Http.call</a> for a complete description\nof parameters.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-async.Future","inner":[{"outer":"angular/angular-core.HttpResponse","inner":[]}]}],"parameters":{"url":{"name":"url","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"data":{"name":"data","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"params":{"name":"params","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.String","inner":[]},{"outer":"dynamic","inner":[]}]}],"value":null,"annotations":[]},"headers":{"name":"headers","optional":true,"named":true,"default":false,"type":[{"outer":"dart-core.Map","inner":[{"outer":"dart-core.String","inner":[]},{"outer":"dart-core.String","inner":[]}]}],"value":null,"annotations":[]},"withCredentials":{"name":"withCredentials","optional":true,"named":true,"default":true,"type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]},"xsrfHeaderName":{"name":"xsrfHeaderName","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"xsrfCookieName":{"name":"xsrfCookieName","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"interceptors":{"name":"interceptors","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"cache":{"name":"cache","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"timeout":{"name":"timeout","optional":true,"named":true,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"angular/angular-core.Http.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>angular/angular-core.Http.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"angular/angular-core.Http.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"angular/angular-core.Http.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>angular/angular-core.Http.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>angular/angular-core.Http.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"angular/angular-core.Http.noSuchMethod","comment":"<p><a>angular/angular-core.Http.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>angular/angular-core.Http.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>angular/angular-core.Http.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>angular/angular-core.Http.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"angular/angular-core.Http.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[{"name":"angular/angular-core-annotation_src.Injectable","parameters":[]}],"generics":{}}
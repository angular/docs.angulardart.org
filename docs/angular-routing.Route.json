{"name":"Route","qualifiedName":"angular-routing.Route","comment":"<p>Route is a node in the tree of routes. The edge leading to the route is\ndefined by path.</p>","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{"name":{"name":"name","qualifiedName":"angular-routing.Route.name","comment":"","final":"true","static":"false","constant":"false","type":[{"outer":"dart-core.String","inner":[]}],"annotations":[]},"path":{"name":"path","qualifiedName":"angular-routing.Route.path","comment":"","final":"true","static":"false","constant":"false","type":[{"outer":"url_matcher.UrlMatcher","inner":[]}],"annotations":[]},"parent":{"name":"parent","qualifiedName":"angular-routing.Route.parent","comment":"","final":"true","static":"false","constant":"false","type":[{"outer":"angular-routing.Route","inner":[]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{"onRoute":{"name":"onRoute","qualifiedName":"angular-routing.Route.onRoute","comment":"","commentFrom":"angular-routing.Route.onRoute","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-async.Stream","inner":[{"outer":"angular-routing.RouteEvent","inner":[]}]}],"parameters":{},"annotations":[{"name":"dart-core.Deprecated","parameters":["next release"]}]},"onPreEnter":{"name":"onPreEnter","qualifiedName":"angular-routing.Route.onPreEnter","comment":"","commentFrom":"angular-routing.Route.onPreEnter","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-async.Stream","inner":[{"outer":"angular-routing.RouteEvent","inner":[]}]}],"parameters":{},"annotations":[]},"onLeave":{"name":"onLeave","qualifiedName":"angular-routing.Route.onLeave","comment":"","commentFrom":"angular-routing.Route.onLeave","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-async.Stream","inner":[{"outer":"angular-routing.RouteEvent","inner":[]}]}],"parameters":{},"annotations":[]},"onEnter":{"name":"onEnter","qualifiedName":"angular-routing.Route.onEnter","comment":"","commentFrom":"angular-routing.Route.onEnter","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-async.Stream","inner":[{"outer":"angular-routing.RouteEvent","inner":[]}]}],"parameters":{},"annotations":[]},"isActive":{"name":"isActive","qualifiedName":"angular-routing.Route.isActive","comment":"<p>Indicates whether this route is currently active. Root route is always\nactive.</p>","commentFrom":"","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{},"annotations":[]},"parameters":{"name":"parameters","qualifiedName":"angular-routing.Route.parameters","comment":"<p>Returns parameters for the currently active route. If the route is not\nactive the getter returns null.</p>","commentFrom":"","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.Map","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{},"methods":{"addRoute":{"name":"addRoute","qualifiedName":"angular-routing.Route.addRoute","comment":"","commentFrom":"angular-routing.Route.addRoute","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"void","inner":[]}],"parameters":{"name":{"name":"name","optional":"true","named":"true","default":"false","type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]},"path":{"name":"path","optional":"true","named":"true","default":"false","type":[{"outer":"dart-core.Pattern","inner":[]}],"value":"null","annotations":[]},"defaultRoute":{"name":"defaultRoute","optional":"true","named":"true","default":"true","type":[{"outer":"dart-core.bool","inner":[]}],"value":"false","annotations":[]},"enter":{"name":"enter","optional":"true","named":"true","default":"false","type":[{"outer":"angular-routing.RouteEnterEventHandler","inner":[]}],"value":"null","annotations":[]},"preEnter":{"name":"preEnter","optional":"true","named":"true","default":"false","type":[{"outer":"angular-routing.RoutePreEnterEventHandler","inner":[]}],"value":"null","annotations":[]},"leave":{"name":"leave","optional":"true","named":"true","default":"false","type":[{"outer":"angular-routing.RouteLeaveEventHandler","inner":[]}],"value":"null","annotations":[]},"mount":{"name":"mount","optional":"true","named":"true","default":"false","type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"getRoute":{"name":"getRoute","qualifiedName":"angular-routing.Route.getRoute","comment":"<p>Returns a route node at the end of the given route path. Route path\ndot delimited string of route names.</p>","commentFrom":"","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"angular-routing.Route","inner":[]}],"parameters":{"routePath":{"name":"routePath","optional":"false","named":"false","default":"false","type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"angular-routing.Route.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"dart-core.Object.toString","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"reverse":{"name":"reverse","qualifiedName":"angular-routing.Route.reverse","comment":"<p>Returns a URL for this route. The tail (url generated by the child path)\nwill be passes to the UrlMatcher to be properly appended in the\nright place.</p>","commentFrom":"","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.String","inner":[]}],"parameters":{"tail":{"name":"tail","optional":"false","named":"false","default":"false","type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"newHandle":{"name":"newHandle","qualifiedName":"angular-routing.Route.newHandle","comment":"<p>Create an return a new <a>angular-routing.RouteHandle</a> for this route.</p>","commentFrom":"","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"angular-routing.RouteHandle","inner":[]}],"parameters":{},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"angular-routing.Route.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>angular-routing.Route.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"angular-routing.Route.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"angular-routing.Route.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>angular-routing.Route.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>angular-routing.Route.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":"false","named":"false","default":"false","type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"angular-routing.Route.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"angular-routing.Route.noSuchMethod","comment":"<p><a>angular-routing.Route.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>angular-routing.Route.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>angular-routing.Route.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>angular-routing.Route.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":"false","abstract":"false","constant":"false","return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":"false","named":"false","default":"false","type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"annotations":[],"generics":{}}
{"name":"NgClassDirective","qualifiedName":"angular-directive.NgClassDirective","comment":"<p>The <code>ngClass</code> allows you to set CSS classes on HTML an element, dynamically,\nby databinding an expression that represents all classes to be added.</p>\n<p>The directive won't add duplicate classes if a particular class was\nalready set.</p>\n<p>When the expression changes, the previously added classes are removed and\nonly then the new classes are added.</p>\n<p>The result of the expression evaluation can be a string representing space\ndelimited class names, an array, or a map of class names to boolean values.\nIn the case of a map, the names of the properties whose values are truthy\nwill be added as css classes to the element.</p>\n<h2>Examples</h2>\n<p>index.html:</p>\n<pre><code>&lt;!--\n  The map syntax:\n\n      ng-class=\"{key1: value1, key2: value2, ...}\"\n\n  results in only adding CSS classes represented by the map keys when\n  the corresponding value expressions are truthy.\n\n  To use a css class that contains a hyphen (such as line-through in this\n  example), you should quote the name to make it a valid map key.  You\n  may, of course, quote all the map keys for consistency.\n--&gt;\n&lt;p ng-class=\"{'line-through': strike, bold: bold, red: red}\"&gt;Map Syntax Example&lt;/p&gt;\n&lt;input type=\"checkbox\" ng-model=\"bold\"&gt; bold\n&lt;input type=\"checkbox\" ng-model=\"strike\"&gt; strike\n&lt;input type=\"checkbox\" ng-model=\"red\"&gt; red\n&lt;hr&gt;\n\n&lt;p ng-class=\"style\"&gt;Using String Syntax&lt;/p&gt;\n&lt;input type=\"text\" ng-model=\"style\" placeholder=\"Type: bold strike red\"&gt;\n&lt;hr&gt;\n\n&lt;p ng-class=\"[style1, style2, style3]\"&gt;Using Array Syntax&lt;/p&gt;\n&lt;input ng-model=\"style1\" placeholder=\"Type: bold\"&gt;&lt;br&gt;\n&lt;input ng-model=\"style2\" placeholder=\"Type: strike\"&gt;&lt;br&gt;\n&lt;input ng-model=\"style3\" placeholder=\"Type: red\"&gt;&lt;br&gt;\n</code></pre>\n<p>style.css:</p>\n<pre><code>.strike {\n  text-decoration: line-through;\n}\n.line-through {\n  text-decoration: line-through;\n}\n.bold {\n    font-weight: bold;\n}\n.red {\n    color: red;\n}\n</code></pre>","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{},"inheritedVariables":{},"methods":{"setters":{},"getters":{},"constructors":{"":{"name":"","qualifiedName":"angular-directive.NgClassDirective.NgClassDirective-","comment":"","commentFrom":"","inheritedFrom":"","static":"false","abstract":"false","constant":"false","return":[{"outer":"dynamic","inner":[]}],"parameters":{"element":{"name":"element","optional":"false","named":"false","default":"false","type":[{"outer":"dart-dom-html.Element","inner":[]}],"value":"null","annotations":[]},"scope":{"name":"scope","optional":"false","named":"false","default":"false","type":[{"outer":"angular-core.Scope","inner":[]}],"value":"null","annotations":[]},"attrs":{"name":"attrs","optional":"false","named":"false","default":"false","type":[{"outer":"angular-core-dom.NodeAttrs","inner":[]}],"value":"null","annotations":[]},"parser":{"name":"parser","optional":"false","named":"false","default":"false","type":[{"outer":"angular-core.AstParser","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"operators":{},"methods":{}},"inheritedMethods":{"setters":{"valueExpression=":{"name":"valueExpression=","qualifiedName":"angular-directive.NgClassDirective.valueExpression=","comment":"","commentFrom":"","inheritedFrom":"angular-directive._NgClassBase.valueExpression=","static":"false","abstract":"false","constant":"false","return":[{"outer":"dynamic","inner":[]}],"parameters":{"currentExpression":{"name":"currentExpression","optional":"false","named":"false","default":"false","type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"angular-directive.NgClassDirective.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>angular-directive.NgClassDirective.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"angular-directive.NgClassDirective.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"angular-directive.NgClassDirective.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>angular-directive.NgClassDirective.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>angular-directive.NgClassDirective.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":"false","named":"false","default":"false","type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"angular-directive.NgClassDirective.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":"false","abstract":"false","constant":"false","return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"angular-directive.NgClassDirective.noSuchMethod","comment":"<p><a>angular-directive.NgClassDirective.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>angular-directive.NgClassDirective.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>angular-directive.NgClassDirective.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>angular-directive.NgClassDirective.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":"false","abstract":"false","constant":"false","return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":"false","named":"false","default":"false","type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"annotations":[{"name":"angular-core.NgDirective","parameters":[]}],"generics":{}}
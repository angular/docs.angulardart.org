{"name":"angular-directive","qualifiedName":"angular-directive","comment":"<p>All of the core directives available in Angular. This library is included as part of <a href=\"#angular/angular\">angular\n.dart</a>.</p>\n<p>A directive attaches a specified behavior to a DOM element. You can extend Angular by writing\nyour own directives and providing them as part of a custom library.</p>\n<p>Directives consist of a class specifying the behavior, and a directive annotation (such as a\n<a href=\"#angular-core-annotation.Decorator\">Decorator</a> or a\n<a href=\"#angular-core-annotation.Component\">Component</a>) that describes when the behavior should be\napplied.</p>\n<p>For example:</p>\n<pre><code>&lt;span ng-show=\"ctrl.isVisible\"&gt;this text is conditionally visible&lt;/span&gt;\n</code></pre>","variables":{},"functions":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{}},"classes":{"class":[{"name":"NgModelOptions","qualifiedName":"angular-directive.NgModelOptions"},{"name":"NgModelMaxLengthValidator","qualifiedName":"angular-directive.NgModelMaxLengthValidator","preview":"<p>Validates the model to see if the length of its contents are less than or\nequal to the maximum length set in place by the HTML maxlength or\nng-maxlength attributes present on the input element.</p>"},{"name":"NgModelMinLengthValidator","qualifiedName":"angular-directive.NgModelMinLengthValidator","preview":"<p>Validates the model to see if the length of its contents are greater than or\nequal to the minimum length set in place by the HTML minlength or\nng-minlength attributes present on the input element.</p>"},{"name":"NgModelPatternValidator","qualifiedName":"angular-directive.NgModelPatternValidator","preview":"<p>Validates the model to see if its contents match the given pattern present on either the\nHTML pattern or ng-pattern attributes present on the input element.</p>"},{"name":"NgModelMinNumberValidator","qualifiedName":"angular-directive.NgModelMinNumberValidator","preview":"<p>Validates the model to see if the numeric value is greater than or equal to the min value.</p>"},{"name":"NgModelMaxNumberValidator","qualifiedName":"angular-directive.NgModelMaxNumberValidator","preview":"<p>Validates the model to see if the numeric value than or equal to the max value.</p>"},{"name":"NgModelNumberValidator","qualifiedName":"angular-directive.NgModelNumberValidator","preview":"<p>Validates the model to see if its contents match a valid number.</p>"},{"name":"NgModelEmailValidator","qualifiedName":"angular-directive.NgModelEmailValidator","preview":"<p>Validates the model to see if its contents match a valid email pattern.</p>"},{"name":"NgModelUrlValidator","qualifiedName":"angular-directive.NgModelUrlValidator","preview":"<p>Validates the model to see if its contents match a valid URL pattern.</p>"},{"name":"NgModelRequiredValidator","qualifiedName":"angular-directive.NgModelRequiredValidator","preview":"<p>Validates the model depending if required or ng-required is present on the element.</p>"},{"name":"NgValidator","qualifiedName":"angular-directive.NgValidator","preview":"<p>NgValidator is the class interface for performing validations for an NgModel instance.</p>"},{"name":"NgNullForm","qualifiedName":"angular-directive.NgNullForm"},{"name":"NgForm","qualifiedName":"angular-directive.NgForm","preview":"<p>The form directive listens on submission requests and, depending,\non if an action is set, the form will automatically either allow\nor prevent the default browser submission from occurring.</p>"},{"name":"OptionValue","qualifiedName":"angular-directive.OptionValue","preview":"<p>Since the value attribute of the OPTION can only be a string, Angular\nprovides ng-value which allows binding to any expression.</p>"},{"name":"InputSelect","qualifiedName":"angular-directive.InputSelect","preview":"<p>HTML SELECT element with angular data-binding if used with\n<a>angular-directive.NgModel</a>.</p>"},{"name":"NgNonBindable","qualifiedName":"angular-directive.NgNonBindable","preview":"<p>Causes the compiler to ignore all Angular directives and markup on descendant\nnodes of the matching element.  Note, however, that other directives and\nmarkup on the element are still processed and that only descending the DOM\nfor compilation is prevented.</p>"},{"name":"NgSwitchDefault","qualifiedName":"angular-directive.NgSwitchDefault"},{"name":"NgSwitchWhen","qualifiedName":"angular-directive.NgSwitchWhen"},{"name":"NgSwitch","qualifiedName":"angular-directive.NgSwitch","preview":"<p>The ngSwitch directive is used to conditionally swap DOM structure on your\ntemplate based on a scope expression. Elements within ngSwitch but without\nngSwitchWhen or ngSwitchDefault directives will be preserved at the location\nas specified in the template.</p>"},{"name":"NgStyle","qualifiedName":"angular-directive.NgStyle","preview":"<p>The <code>ngStyle</code> directive allows you to set CSS style on an HTML element\nconditionally.</p>"},{"name":"NgAttribute","qualifiedName":"angular-directive.NgAttribute","preview":"<p>In SVG some attributes have a specific syntax. Placing <code>{{interpolation}}</code> in\nthose attributes will break the attribute syntax, and browser will clear the\nattribute.</p>"},{"name":"NgSource","qualifiedName":"angular-directive.NgSource","preview":"<p>In browser some attributes have network side-effect. If the attribute\nhas <code>{{interpolation}}</code> in it it may cause browser to fetch bogus URLs.</p>"},{"name":"NgBooleanAttribute","qualifiedName":"angular-directive.NgBooleanAttribute","preview":"<p>Allows adding and removing the boolean attributes from the element.</p>"},{"name":"NgShow","qualifiedName":"angular-directive.NgShow","preview":"<p>The ngShow directive shows or hides the given HTML element based on the\nexpression provided to the ngHide attribute. The element is shown or hidden\nby changing the removing or adding the ng-hide CSS class onto the element.</p>"},{"name":"NgHide","qualifiedName":"angular-directive.NgHide","preview":"<p>The ngHide directive shows or hides the given HTML element based on the\nexpression provided to the ngHide attribute. The element is shown or hidden\nby changing the removing or adding the ng-hide CSS class onto the element.</p>"},{"name":"NgTemplate","qualifiedName":"angular-directive.NgTemplate","preview":"<p>The <a>angular-directive.NgTemplate</a> allows one to preload an Angular template\ninto the <a>angular-core-dom_internal.TemplateCache</a>.  It works on <code>&lt;template&gt;</code> and <code>&lt;script&gt;</code> elements\nthat have <code>type=\"text/ng-template</code>.  For such elements, The entire contents\nof the elements are loaded into the <a>angular-core-dom_internal.TemplateCache</a> under the URL specified\nby the <code>id</code> attribute.</p>"},{"name":"NgRepeat","qualifiedName":"angular-directive.NgRepeat","preview":"<p>The <code>ngRepeat</code> directive instantiates a template once per item from a\ncollection. Each template instance gets its own scope, where the given loop\nvariable is set to the current collection item, and <code>$index</code> is set to the\nitem index or key.</p>"},{"name":"NgPluralize","qualifiedName":"angular-directive.NgPluralize","preview":"<h2>Overview</h2>\n<p><code>ngPluralize</code> is a directive that displays messages according to locale rules.</p>"},{"name":"ContentEditable","qualifiedName":"angular-directive.ContentEditable","preview":"<p>Creates a two-way databinding between the expression specified in <code>ng-model</code> and the HTML element\nin the DOM.</p>"},{"name":"InputRadio","qualifiedName":"angular-directive.InputRadio","preview":"<p>Creates a two-way databinding between the <code>ng-model</code> expression\nand the radio input elements in the DOM.</p>"},{"name":"NgFalseValue","qualifiedName":"angular-directive.NgFalseValue","preview":"<p>Assigns the value of a bound expression to the model when an input checkbox is\nunchecked.</p>"},{"name":"NgTrueValue","qualifiedName":"angular-directive.NgTrueValue","preview":"<p>Assigns the value of a bound expression to the model when an input checkbox is\nchecked.</p>"},{"name":"NgValue","qualifiedName":"angular-directive.NgValue","preview":"<p>Binds an expression to the value of a radio element or option,\nto be used when that element is selected.</p>"},{"name":"InputDateLike","qualifiedName":"angular-directive.InputDateLike","preview":"<p>Controls the IDL attribute that reads the value of a date/time input,\nto support browsers that deviate from the HTML5 standard for date/time.</p>"},{"name":"NgBindTypeForDateLike","qualifiedName":"angular-directive.NgBindTypeForDateLike","preview":"<p>This directive affects which IDL attribute will be used to read the value of\ndate/time related input directives. Recognized values for this directive are:</p>"},{"name":"InputNumberLike","qualifiedName":"angular-directive.InputNumberLike","preview":"<p>Creates a two-way databinding between the <code>ng-model</code> expression\nand a numeric input element.</p>"},{"name":"InputTextLike","qualifiedName":"angular-directive.InputTextLike","preview":"<p>Creates a two-way databinding between the <code>ng-model</code> expression\nand the <code>&lt;input&gt;</code> or <code>&lt;textarea&gt;</code> string-based input elements.</p>"},{"name":"InputCheckbox","qualifiedName":"angular-directive.InputCheckbox","preview":"<p>Creates a two-way databinding between the <code>ng-model</code> expression\nand the checkbox input element state.</p>"},{"name":"NgModel","qualifiedName":"angular-directive.NgModel","preview":"<p>Ng-model directive is responsible for reading/writing to the model.</p>"},{"name":"NgModelConverter","qualifiedName":"angular-directive.NgModelConverter","preview":"<p>Class interface for performing transformations on the viewValue and modelValue properties on a model.</p>"},{"name":"NgNullControl","qualifiedName":"angular-directive.NgNullControl"},{"name":"NgControl","qualifiedName":"angular-directive.NgControl","preview":"<p>Contains info and error states used during form and input validation.</p>"},{"name":"NgInclude","qualifiedName":"angular-directive.NgInclude","preview":"<p>Fetches, compiles and includes an external Angular template/HTML.</p>"},{"name":"NgUnless","qualifiedName":"angular-directive.NgUnless","preview":"<p>The <code>ng-unless</code> directive complements the <code>ng-if</code> (provided by\n<a>angular-directive.NgIf</a>) directive.</p>"},{"name":"NgIf","qualifiedName":"angular-directive.NgIf","preview":"<p>The <code>ng-if</code> directive compliments the <code>ng-unless</code> (provided by\n<a>angular-directive.NgUnless</a>) directive.</p>"},{"name":"NgCloak","qualifiedName":"angular-directive.NgCloak","preview":"<p>Hides elements on the page while the application loads. <code>Selector: [ng-cloak], .ng-cloak</code></p>"},{"name":"NgEvent","qualifiedName":"angular-directive.NgEvent","preview":"<p>Allows you to specify custom behavior for DOM UI events such as mouse,\nkeyboard and touch events.</p>"},{"name":"NgClassEven","qualifiedName":"angular-directive.NgClassEven","preview":"<p>The <code>ngClassOdd</code> and <code>ngClassEven</code> directives work exactly as\n{@link ng.directive:ngClass ngClass}, except it works in\nconjunction with <code>ngRepeat</code> and takes affect only on odd (even) rows.</p>"},{"name":"NgClassOdd","qualifiedName":"angular-directive.NgClassOdd","preview":"<p>Dynamically style only odd rows in a list via data.</p>"},{"name":"NgClass","qualifiedName":"angular-directive.NgClass","preview":"<p>The <code>ngClass</code> directive allows you to dynamically style an HTML element,\nby binding to an expression that represents the classes to be bound. <code>Selector: [ng-class]</code></p>"},{"name":"NgBindTemplate","qualifiedName":"angular-directive.NgBindTemplate","preview":"<p>Replaces the text content of an element with an interpolated template. <code>Selector: [ng-bind-template]</code></p>"},{"name":"NgBindHtml","qualifiedName":"angular-directive.NgBindHtml","preview":"<p>Sanitizes an HTML string and invokes the browser's parser to insert the string into\nthe containing element in the DOM. <code>Selector: [ng-bind-html]</code></p>"},{"name":"NgBind","qualifiedName":"angular-directive.NgBind","preview":"<p>Replaces the text content of the specified HTML element with the value of a given expression,\nand updates the text content when the value of that expression changes. <code>Selector: [ng-bind]</code></p>"},{"name":"NgBaseCss","qualifiedName":"angular-directive.NgBaseCss","preview":"<p>Specifies a base CSS to use for components defined under the directive. <code>Selector: [ng-base-css]</code></p>"},{"name":"AHref","qualifiedName":"angular-directive.AHref","preview":"<p>Modifies the default behavior of the HTML <code>&lt;a&gt;</code> element to prevent navigation from the current page when the <code>href</code>\nattribute is empty. <code>Selector: a[href]</code></p>"},{"name":"DirectiveModule","qualifiedName":"angular-directive.DirectiveModule","preview":"<p>This module registers all the Angular directives.</p>"}],"typedef":{},"error":[]},"packageName":"","packageIntro":null}
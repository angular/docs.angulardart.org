{"name":"Application","qualifiedName":"angular-app.Application","comment":"<p>Bootstraps AngularDart and defines which application module(s) are available to the app.</p>\n<p>Application is how you configure and run an Angular application. Application is abstract. There are two\nimplementations: one is dynamic, using Mirrors; the other is static, using code generation.</p>\n<p>To create an Application, import angular_dynamic.dart and call dynamicApplication like so:</p>\n<pre><code>import 'package:angular/angular.dart';\nimport 'package:angular/angular_dynamic.dart';\n\nclass HelloWorldController {\n  ...\n  }\n\nmain() {\n dynamicApplication()\n   .addModule(new Module()..type(HelloWorldController))\n   .run();\n}\n</code></pre>\n<p>On <code>pub build</code>, dynamicApplication becomes staticApplication, as pub generates the getters,\nsetters, annotations, and factories for the root Injector that ngApp creates. This</p>\n<p>Here, the ngBootstrap method performs the following actions:</p><ol><li>Locating the root element of the application,</li><li>Creating Angular <a>angular-core_internal.NgZone</a></li><li>Inside the <a>angular-core_internal.NgZone</a> create an injector</li><li>Retrieve the <a>angular-core-dom_internal.Compiler</a> and compile the root element</li></ol>","isAbstract":true,"superclass":"dart-core.Object","implements":[],"subclass":[],"variables":{"zone":{"name":"zone","qualifiedName":"angular-app-dynamic.Application.zone","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dynamic","inner":[]}],"annotations":[]},"ngModule":{"name":"ngModule","qualifiedName":"angular-app-dynamic.Application.ngModule","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dynamic","inner":[]}],"annotations":[]},"modules":{"name":"modules","qualifiedName":"angular-app-dynamic.Application.modules","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"dynamic","inner":[]}],"annotations":[]},"element":{"name":"element","qualifiedName":"angular-app-dynamic.Application.element","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"dart-dom-html.Element","inner":[]}],"annotations":[]},"injector":{"name":"injector","qualifiedName":"angular-app-dynamic.Application.injector","comment":"","final":false,"static":false,"constant":false,"type":[{"outer":"di.Injector","inner":[]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{},"constructors":{"":{"name":"","qualifiedName":"angular-app.Application.Application-","comment":"","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]}},"operators":{},"methods":{"selector":{"name":"selector","qualifiedName":"angular-app.Application.selector","comment":"","commentFrom":"angular-app-dynamic.Application.selector","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-dom-html.Element","inner":[]}],"parameters":{"selector":{"name":"selector","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"addModule":{"name":"addModule","qualifiedName":"angular-app.Application.addModule","comment":"","commentFrom":"angular-app-dynamic.Application.addModule","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"angular-app.Application","inner":[]}],"parameters":{"module":{"name":"module","optional":false,"named":false,"default":false,"type":[{"outer":"angular-app.Module","inner":[]}],"value":"null","annotations":[]}},"annotations":[]},"run":{"name":"run","qualifiedName":"angular-app.Application.run","comment":"","commentFrom":"angular-app-dynamic.Application.run","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"di.Injector","inner":[]}],"parameters":{},"annotations":[]},"createInjector":{"name":"createInjector","qualifiedName":"angular-app.Application.createInjector","comment":"","commentFrom":"angular-app-dynamic.Application.createInjector","inheritedFrom":"","static":false,"abstract":true,"constant":false,"return":[{"outer":"di.Injector","inner":[]}],"parameters":{},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"angular-app.Application.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>angular-app.Application.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"angular-app.Application.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"angular-app.Application.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>angular-app.Application.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>angular-app.Application.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}},"methods":{"toString":{"name":"toString","qualifiedName":"angular-app.Application.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]},"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"angular-app.Application.noSuchMethod","comment":"<p><a>angular-app.Application.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>angular-app.Application.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>angular-app.Application.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>angular-app.Application.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":"null","annotations":[]}},"annotations":[]}}},"annotations":[],"generics":{}}
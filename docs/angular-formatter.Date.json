{"name":"Date","qualifiedName":"angular-formatter.Date","comment":"<p>Formats a date value to a string based on the requested format.</p>\n<h1>Usage</h1>\n<pre><code>date_expression | date[:format]\n</code></pre>\n<p><code>format</code> may be specified explicitly, or by using one of the following predefined shorthand:</p>\n<pre><code> FORMAT NAME        OUTPUT for en_US\n-------------  ---------------------------\n medium         Sep 3, 2010 12:05:08 PM\n short          9/3/10 12:05 PM\n fullDate       Friday, September 3, 2010\n longDate       September 3, 2010\n mediumDate     Sep 3, 2010\n shortDate      9/3/10\n mediumTime     12:05:08 PM\n shortTime      12:05 PM\n</code></pre>\n<p>For more on explicit formatting of dates and date syntax, see the documentation for the\n<a href=\"https://api.dartlang.org/apidocs/channels/stable/dartdoc-viewer/intl/intl.DateFormat\">DartFormat class</a>.</p>\n<h1>Example</h1>\n<pre><code>'2014-05-22' | date:'fullDate'     // \"Thursday, May 22, 2014\" for the en_US locale\n</code></pre>","isAbstract":false,"superclass":"dart-core.Object","implements":["dart-core.Function"],"subclass":[],"variables":{},"inheritedVariables":{},"methods":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{"call":{"name":"call","qualifiedName":"angular-formatter.Date.call","comment":"<p>Format a value as a date.</p><ul><li>\n<p><code>date</code>:   value to format as a date. If no timezone is specified in the string input,\nthe time is considered to be in the local timezone.</p></li><li>\n<p><code>format</code>: Either a named format, or an explicit format specification.  If no format is\nspecified, mediumDate is used.</p></li></ul>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"date":{"name":"date","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Object","inner":[]}],"value":null,"annotations":[]},"format":{"name":"format","optional":true,"named":false,"default":true,"type":[{"outer":"dart-core.String","inner":[]}],"value":"\"mediumDate\"","annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"angular-formatter.Date.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>angular-formatter.Date.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"angular-formatter.Date.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"angular-formatter.Date.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>angular-formatter.Date.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>angular-formatter.Date.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"angular-formatter.Date.noSuchMethod","comment":"<p><a>angular-formatter.Date.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>angular-formatter.Date.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>angular-formatter.Date.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>angular-formatter.Date.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"angular-formatter.Date.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[{"name":"angular-core-annotation_src.Formatter","parameters":["name:'date'"]}],"generics":{}}
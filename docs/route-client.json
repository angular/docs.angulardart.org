{"name":"route-client","qualifiedName":"route-client","comment":"","variables":{},"functions":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{}},"classes":{"class":[{"name":"UrlMatch","qualifiedName":"route-client.UrlMatch","preview":"<p>Object representing a successul URL match.</p>"},{"name":"UrlMatcher","qualifiedName":"route-client.UrlMatcher","preview":"<p>A reversible URL matcher interface.</p>"},{"name":"RouteHandle","qualifiedName":"route-client.RouteHandle","preview":"<p>A helper Router handle that scopes all route event subsriptions to it's\ninstance and provides an convinience <a>route-client.RouteHandle.discard</a> method.</p>"},{"name":"Router","qualifiedName":"route-client.Router","preview":"<p>Stores a set of UrlPattern to Handler associations and provides methods\nfor calling a handler for a URL path, listening to <a>dart-dom-html.Window</a> history events,\nand creating HTML event handlers that navigate to a URL.</p>"},{"name":"Routable","qualifiedName":"route-client.Routable"},{"name":"RouteStartEvent","qualifiedName":"route-client.RouteStartEvent","preview":"<p>Event emitted when routing starts.</p>"},{"name":"RouteLeaveEvent","qualifiedName":"route-client.RouteLeaveEvent"},{"name":"RouteEnterEvent","qualifiedName":"route-client.RouteEnterEvent"},{"name":"RoutePreEnterEvent","qualifiedName":"route-client.RoutePreEnterEvent"},{"name":"RouteEvent","qualifiedName":"route-client.RouteEvent","preview":"<p>Route enter or leave event.</p>"},{"name":"RouteImpl","qualifiedName":"route-client.RouteImpl","preview":"<p>Route is a node in the tree of routes. The edge leading to the route is\ndefined by path.</p>"},{"name":"Route","qualifiedName":"route-client.Route","preview":"<p><a>route-client.Route</a> represents a node in the route tree.</p>"}],"typedef":{"RouteLeaveEventHandler":{"name":"RouteLeaveEventHandler","qualifiedName":"route-client.RouteLeaveEventHandler","comment":"","return":"dynamic","parameters":{"path":{"name":"path","optional":false,"named":false,"default":false,"type":[{"outer":"route-client.RouteLeaveEvent","inner":[]}],"value":"null","annotations":[]}},"annotations":[],"generics":{}},"RouteEnterEventHandler":{"name":"RouteEnterEventHandler","qualifiedName":"route-client.RouteEnterEventHandler","comment":"","return":"dynamic","parameters":{"path":{"name":"path","optional":false,"named":false,"default":false,"type":[{"outer":"route-client.RouteEnterEvent","inner":[]}],"value":"null","annotations":[]}},"annotations":[],"generics":{}},"RoutePreEnterEventHandler":{"name":"RoutePreEnterEventHandler","qualifiedName":"route-client.RoutePreEnterEventHandler","comment":"","return":"dynamic","parameters":{"path":{"name":"path","optional":false,"named":false,"default":false,"type":[{"outer":"route-client.RoutePreEnterEvent","inner":[]}],"value":"null","annotations":[]}},"annotations":[],"generics":{}}},"error":[]},"packageName":"","packageIntro":null}
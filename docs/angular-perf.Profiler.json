{"name":"Profiler","qualifiedName":"angular-perf.Profiler","comment":"<p>A simple profiler api.</p>","isAbstract":false,"superclass":"dart-core.Object","implements":[],"subclass":["angular-perf.DevToolsTimelineProfiler"],"variables":{"counters":{"name":"counters","qualifiedName":"angular-perf.Profiler.counters","comment":"","final":true,"static":false,"constant":false,"type":[{"outer":"perf_api.Counters","inner":[]}],"annotations":[]}},"inheritedVariables":{},"methods":{"setters":{},"getters":{},"constructors":{"":{"name":"","qualifiedName":"angular-perf.Profiler.Profiler-","comment":"<p>Const constructor allows instances of this class to be used as a no-op\nimplementation.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":true,"return":[{"outer":"dynamic","inner":[]}],"parameters":{},"annotations":[]}},"operators":{},"methods":{"markTime":{"name":"markTime","qualifiedName":"angular-perf.Profiler.markTime","comment":"<p>A simple zero-duration marker.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"name":{"name":"name","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"extraData":{"name":"extraData","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"startTimer":{"name":"startTimer","qualifiedName":"angular-perf.Profiler.startTimer","comment":"<p>Starts a new timer for a given action <a>angular-perf.Profiler.startTimer.name</a>. A timer id will be\nreturned which can be used in <a>angular-perf.Profiler.stopTimer</a> to stop the timer.</p>\n<p><a>angular-perf.Profiler.startTimer.extraData</a> is additional information about the timed action. Implementing\nprofiler should not assume any semantic or syntactic structure of that\ndata and is free to ignore it in aggregate reports.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"name":{"name":"name","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"extraData":{"name":"extraData","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"stopTimer":{"name":"stopTimer","qualifiedName":"angular-perf.Profiler.stopTimer","comment":"<p>Stop a timer for a given <a>angular-perf.Profiler.stopTimer.idOrName</a>. <a>angular-perf.Profiler.stopTimer.idOrName</a> can either be a timer\nidentifier returned from <a>angular-perf.Profiler.startTimer</a> or a timer name string. If <a>angular-perf.Profiler.stopTimer.idOrName</a>\nis invalid or timer for that <a>angular-perf.Profiler.stopTimer.idOrName</a> was already stopped then\n<a>perf_api.ProfilerError</a> will be thrown. If <a>angular-perf.Profiler.stopTimer.idOrName</a> is a String timer name then\nthe latest active timer with that name will be stopped.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"void","inner":[]}],"parameters":{"idOrName":{"name":"idOrName","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"time":{"name":"time","qualifiedName":"angular-perf.Profiler.time","comment":"<p>Times execution of the <a>angular-perf.Profiler.time.functionOrFuture</a>. Body can either be a no argument\nfunction or a <a>dart-async.Future</a>. If function, it is executed synchronously and its\nreturn value is returned. If it's a Future, then timing is stopped when the\nfuture completes either successfully or with error.</p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"name":{"name":"name","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.String","inner":[]}],"value":null,"annotations":[]},"functionOrFuture":{"name":"functionOrFuture","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"extraData":{"name":"extraData","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}}},"inheritedMethods":{"setters":{},"getters":{"hashCode":{"name":"hashCode","qualifiedName":"angular-perf.Profiler.hashCode","comment":"<p>Get a hash code for this object.</p>\n<p>All objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator <code>==</code>. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.</p>\n<p>If a subclass overrides <a>angular-perf.Profiler.hashCode</a> it should override the\nequality operator as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.hashCode","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.int","inner":[]}],"parameters":{},"annotations":[]},"runtimeType":{"name":"runtimeType","qualifiedName":"angular-perf.Profiler.runtimeType","comment":"<p>A representation of the runtime type of the object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.runtimeType","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.Type","inner":[]}],"parameters":{},"annotations":[]}},"constructors":{},"operators":{"==":{"name":"==","qualifiedName":"angular-perf.Profiler.==","comment":"<p>The equality operator.</p>\n<p>The default behavior for all <a>dart-core.Object</a>s is to return true if and\nonly if <code>this</code> and <a>angular-perf.Profiler.==.other</a> are the same object.</p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:</p><ul><li>\n<p>Total: It must return a boolean for all arguments. It should never throw\n   or return <code>null</code>.</p></li><li>\n<p>Reflexive: For all objects <code>o</code>, <code>o == o</code> must be true.</p></li><li>\n<p>Symmetric: For all objects <code>o1</code> and <code>o2</code>, <code>o1 == o2</code> and <code>o2 == o1</code> must\n   either both be true, or both be false.</p></li><li>\n<p>Transitive: For all objects <code>o1</code>, <code>o2</code>, and <code>o3</code>, if <code>o1 == o2</code> and\n   <code>o2 == o3</code> are true, then <code>o1 == o3</code> must be true.</p></li></ul>\n<p>The method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.</p>\n<p>If a subclass overrides the equality operator it should override\nthe <a>angular-perf.Profiler.hashCode</a> method as well to maintain consistency.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.==","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.bool","inner":[]}],"parameters":{"other":{"name":"other","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}},"methods":{"noSuchMethod":{"name":"noSuchMethod","qualifiedName":"angular-perf.Profiler.noSuchMethod","comment":"<p><a>angular-perf.Profiler.noSuchMethod</a> is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to <a>angular-perf.Profiler.noSuchMethod</a> in an <a>dart-core.Invocation</a>.\nIf <a>angular-perf.Profiler.noSuchMethod</a> returns a value, that value becomes the result of\nthe original invocation.</p>\n<p>The default behavior of <a>angular-perf.Profiler.noSuchMethod</a> is to throw a\n<a>dart-core.NoSuchMethodError</a>.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.noSuchMethod","static":false,"abstract":false,"constant":false,"return":[{"outer":"dynamic","inner":[]}],"parameters":{"invocation":{"name":"invocation","optional":false,"named":false,"default":false,"type":[{"outer":"dart-core.Invocation","inner":[]}],"value":null,"annotations":[]}},"annotations":[]},"toString":{"name":"toString","qualifiedName":"angular-perf.Profiler.toString","comment":"<p>Returns a string representation of this object.</p>","commentFrom":"","inheritedFrom":"dart-core.Object.toString","static":false,"abstract":false,"constant":false,"return":[{"outer":"dart-core.String","inner":[]}],"parameters":{},"annotations":[]}}},"annotations":[],"generics":{}}